[{"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/index.js":"1","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/App.js":"2","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/reportWebVitals.js":"3","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/header.component.jsx":"4","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/startGame.component.jsx":"5","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/joinGame.component.jsx":"6","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/services/main.service.jsx":"7","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/piece.component.jsx":"8","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/game/game.component.jsx":"9","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/game/canvas.component.jsx":"10","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/generator/piece-generator.component.jsx":"11","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/generator/random-generator.jsx":"12","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/generator/piece-generator.jsx":"13","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/pieces.component.jsx":"14","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/generator/util-functions.jsx":"15","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/services/server.service.jsx":"16","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/piece-data.component.jsx":"17"},{"size":546,"mtime":1608644977766,"results":"18","hashOfConfig":"19"},{"size":1445,"mtime":1621646441014,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1608644977766,"results":"21","hashOfConfig":"19"},{"size":1329,"mtime":1621646593856,"results":"22","hashOfConfig":"19"},{"size":1438,"mtime":1615518914937,"results":"23","hashOfConfig":"19"},{"size":1408,"mtime":1615510818642,"results":"24","hashOfConfig":"19"},{"size":1078,"mtime":1621642359133,"results":"25","hashOfConfig":"19"},{"size":1085,"mtime":1621623754341,"results":"26","hashOfConfig":"19"},{"size":11744,"mtime":1621645946587,"results":"27","hashOfConfig":"19"},{"size":617,"mtime":1621555765342,"results":"28","hashOfConfig":"19"},{"size":4450,"mtime":1621559981885,"results":"29","hashOfConfig":"19"},{"size":827,"mtime":1621557651755,"results":"30","hashOfConfig":"19"},{"size":5093,"mtime":1621643117452,"results":"31","hashOfConfig":"19"},{"size":1174,"mtime":1620373843156,"results":"32","hashOfConfig":"19"},{"size":718,"mtime":1620395140087,"results":"33","hashOfConfig":"19"},{"size":235,"mtime":1620385249228,"results":"34","hashOfConfig":"19"},{"size":3070,"mtime":1621650785463,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"2zlue",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/index.js",[],["76","77"],"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/App.js",["78"],"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/reportWebVitals.js",[],"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/header.component.jsx",["79"],"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/startGame.component.jsx",[],"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/joinGame.component.jsx",[],"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/services/main.service.jsx",[],"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/piece.component.jsx",["80"],"import React, { Component } from 'react'\nimport Canvas from '../game/canvas.component';\nimport PieceGenerator from '../generator/piece-generator';\n\nclass PieceComponent extends Component {\n\n    constructor(props) {\n        var pg = new PieceGenerator(300, 400, \"\" + Math.random());\n        super(props);\n        this.state = {\n            width: 300,\n            height: 400,\n            piece: pg.drawPieceCanvas(\"P1\")\n        }\n    }\n\n    drawMethod() {\n        const { piece, width, height } = this.state;\n\n        const draw = (ctx, frameCount) => {\n            ctx.canvas.width = width\n            ctx.canvas.height = height\n            ctx.drawImage(piece, 0, 0);\n        }\n        return draw;\n    }\n\n\n\n    render() {\n        const { symbol, selected, canMove } = this.props;\n        let style = {};\n        let str = symbol\n        if ((selected || canMove)) {\n            style = { color: 'green' };\n            if (str === \"\") {\n                //   str='X';\n            }\n        }\n        return (<Canvas draw={this.drawMethod()} />);\n    }\n}\n\nexport default PieceComponent","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/game/game.component.jsx",["81","82","83","84","85","86","87","88","89"],"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/game/canvas.component.jsx",[],"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/generator/piece-generator.component.jsx",["90","91"],"import React, { Component } from 'react'\nimport RandomGenerator from './random-generator';\n\nclass PieceGeneratorComponent extends Component {\n\n    static gen;\n    static width = 600;\n    static height = 600;\n\n\n\n\n\n\n\n    // static nextRand() {\n    //     var hi = this.seed / (2147483647 / 48271);\n    //     var lo = this.seed % (2147483647 / 48271);\n    //     var test = 48271 * lo - (2147483647 % 48271) * hi;\n    //     if (test > 0) {\n    //         this.seed = test;\n    //     } else {\n    //         this.seed = test + 2147483647;\n    //     }\n    //     return this.seed * (1.0 / 2147483647);\n    // }\n\n\n\n    // static drawPolygon() {\n\n    //     var pointNumber = this.randNumOfRange(3, 5);\n    //     console.log(\"pointNumber=\" + pointNumber)\n    //     //console.log(Math.floor(this.nextRand() * 16777215).toString(16));\n    //     var color = \"#\" + Math.floor(this.nextRand() * 16777215).toString(16);\n\n    //     var pts = \"\";\n    //     var ptsMirror = \"\";\n    //     for (var i = 0; i < pointNumber; i++) {\n    //         var x = this.randNumOfRange(0, this.width);\n    //         var y = this.randNumOfRange(0, this.height);\n    //         pts += x + \",\" + y + \" \";\n    //         var x2 = this.width - x;\n    //         ptsMirror += x2 + \",\" + y + \" \";\n    //         //  console.log(i);\n    //     }\n\n    //     return <><polygon points={pts} fill={color} />\n    //         <polygon points={ptsMirror} fill={color} /></>;\n    // }\n\n\n    // static drawPiece(width, height, seed, owner) {\n    //     this.seed = seed;\n    //     this.width = width;\n    //     this.height = height;\n\n    //     return (\n    //         <>\n    //             <svg height={this.height} width={this.width}>\n    //                 {this.drawPolygon()}\n    //                 {this.drawPolygon()}\n    //                 {this.drawPolygon()}\n    //                 {this.drawPolygon()}\n    //                 {this.drawPolygon()}\n    //             </svg>\n    //         </>\n    //     )\n    // }\n\n\n\n    static drawPolygonCanvas(c2) {\n        // TODO:     var shape1 = new Path2D();\n        // circle.arc(100, 35, 25, 0, 2 * Math.PI);\n\n        // ctx.stroke(rectangle);\n        // ctx.fill(circle);\n\n\n        var pointNumber = this.randNumOfRange(3, 10);\n        //console.log(\"pointNumber=\" + pointNumber)\n        var r = Math.floor(this.random() * 255).toString(16);\n        var g = Math.floor(this.random() * 255).toString(16);\n        var b = Math.floor(this.random() * 255).toString(16);\n        var color = \"#\" + r + g + b;\n\n\n        // var color = \"#\" + Math.floor(this.random() * 255).toString(2);\n        // 16 777 216\n        // console.log(color);\n\n        var points = [];\n        for (var i = 0; i < pointNumber; i++) {\n            var x = this.randNumOfRange(0, this.width);\n            var y = this.randNumOfRange(0, this.height);\n            points.push({ x: x, y: y });\n            // console.log(\"peint added: (\", x, \",\", y, \")\");\n        }\n\n\n        c2.fillStyle = color;\n        c2.beginPath();\n        for (var i = 0; i < points.length; i++) {\n            if (i === 0) {\n                c2.moveTo(points[i].x, points[i].y);\n            } else {\n                c2.lineTo(points[i].x, points[i].y);\n            }\n        }\n        c2.closePath();\n        c2.fill();\n\n        c2.fillStyle = color;\n        c2.beginPath();\n\n        for (var j = 0; j < points.length; j++) {\n            var x2 = this.width - points[j].x;\n            if (j === 0) {\n                c2.moveTo(x2, points[j].y);\n            } else {\n                c2.lineTo(x2, points[j].y);\n            }\n        }\n        c2.closePath();\n        c2.fill();\n    }\n\n\n    static random() {\n        return this.gen.random();\n    }\n\n    static randNumOfRange(a, b) {\n        return this.gen.randNumOfRange(a, b);\n    }\n\n\n\n\n    static drawPieceCanvas(width, height, seedstr, owner) {\n        this.gen = new RandomGenerator(seedstr);\n\n        this.width = width;\n        this.height = height;\n\n        var canvas2 = document.createElement('canvas');\n        canvas2.width = width;\n        canvas2.height = height;\n        var context2 = canvas2.getContext('2d');\n        // console.log(\"Piece: \", seedstr);\n\n        this.drawPolygonCanvas(context2);\n        this.drawPolygonCanvas(context2);\n        this.drawPolygonCanvas(context2);\n        this.drawPolygonCanvas(context2);\n\n        return (\n            canvas2\n        );\n    }\n\n\n\n\n}\n\nexport default PieceGeneratorComponent","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/generator/random-generator.jsx",["92"],"import React, { Component } from 'react'\n\nclass RandomGenerator extends Component {\n\n\n    constructor(str) {\n        super();\n        this.tempSeed = this.hash(str);\n\n        //        console.log(\"str=\", str, \"seed=\", this.tempSeed);\n    }\n\n    random() {\n        var x = Math.sin(this.tempSeed) * 10000;\n        this.tempSeed = Math.sin(this.tempSeed);\n        return x - Math.floor(x);\n    }\n\n    randNumOfRange(a, b) {\n\n        return Math.round(this.random() * (b - a) + a);\n    }\n\n\n    hash(str) {\n        var hash = 0, i, chr;\n        if (str.length === 0) return hash;\n        for (i = 0; i < str.length; i++) {\n            chr = str.charCodeAt(i);\n            hash = ((hash << 5) - hash) + chr;\n            hash |= 0; // Convert to 32bit integer\n        }\n        return hash;\n    }\n}\n\n\n\nexport default RandomGenerator","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/generator/piece-generator.jsx",["93","94"],"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/pieces.component.jsx",["95","96"],"import React, { Component } from 'react'\nimport Canvas from '../game/canvas.component';\nimport PieceGenerator from '../generator/piece-generator';\nimport RandomGenerator from '../generator/random-generator';\nimport UtilFunctions from '../generator/random-generator';\n\nclass PiecesComponent extends Component {\n\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            width: 50,\n            height: 60,\n            pieces: []\n        }\n\n        for (var i = 0; i < 110; i++) {\n            var pg = new PieceGenerator(this.state.width, this.state.height, \"\" + Math.random());\n            this.state.pieces.push(pg.drawPieceCanvas(\"P1\"));\n        }\n\n    }\n\n    drawMethod(piece) {\n        const { width, height } = this.state;\n\n        const draw = (ctx, frameCount) => {\n            ctx.canvas.width = width\n            ctx.canvas.height = height\n            ctx.drawImage(piece, 0, 0);\n        }\n        return draw;\n    }\n\n    drawPieces() {\n        const { pieces } = this.state;\n        return pieces.map((p) => <Canvas draw={this.drawMethod(p)} />)\n    }\n\n    render() {\n        return this.drawPieces();\n    }\n}\n\nexport default PiecesComponent","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/generator/util-functions.jsx",["97","98","99","100"],"import React, { Component } from 'react'\nimport RandomGenerator from './random-generator';\n\nclass UtilFunctions extends Component {\n\n    // check point is in polygon\n    // generate point in polygon\n\n\n\n    static polygonArea(points) {\n        if (points === undefined) {\n            return 0.0;\n        }\n        const num = points.length;\n        if (num < 3) {\n            return 0.0;\n        }\n        var area = 0.0;\n\n        for (var i = 0; i < num; i++) {\n            var x = points[i].x;\n            var y = points[i].y;\n            area += (points[i].y + points[(i + 1) % num].y) * (points[i].x - points[(i + 1) % num].x);\n        }\n        return Math.abs(area / 2.0);\n    }\n\n\n\n}\n\nexport default UtilFunctions","/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/services/server.service.jsx",[],"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/piece-data.component.jsx",["101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":2,"column":50,"nodeType":"108","messageId":"109","endLine":2,"endColumn":57},{"ruleId":"110","severity":1,"message":"111","line":35,"column":31,"nodeType":"112","endLine":35,"endColumn":89},{"ruleId":"106","severity":1,"message":"113","line":35,"column":13,"nodeType":"108","messageId":"109","endLine":35,"endColumn":18},{"ruleId":"106","severity":1,"message":"114","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":22},{"ruleId":"106","severity":1,"message":"115","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":31},{"ruleId":"106","severity":1,"message":"116","line":67,"column":15,"nodeType":"108","messageId":"109","endLine":67,"endColumn":24},{"ruleId":"106","severity":1,"message":"117","line":120,"column":25,"nodeType":"108","messageId":"109","endLine":120,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":158,"column":38,"nodeType":"120","messageId":"121","endLine":158,"endColumn":40},{"ruleId":"118","severity":1,"message":"119","line":237,"column":54,"nodeType":"120","messageId":"121","endLine":237,"endColumn":56},{"ruleId":"106","severity":1,"message":"122","line":312,"column":73,"nodeType":"108","messageId":"109","endLine":312,"endColumn":77},{"ruleId":"106","severity":1,"message":"123","line":312,"column":79,"nodeType":"108","messageId":"109","endLine":312,"endColumn":81},{"ruleId":"106","severity":1,"message":"124","line":315,"column":13,"nodeType":"108","messageId":"109","endLine":315,"endColumn":18},{"ruleId":"106","severity":1,"message":"125","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":104,"column":18,"nodeType":"108","messageId":"128","endLine":104,"endColumn":19},{"ruleId":"106","severity":1,"message":"125","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"125","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"129","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":21},{"ruleId":"106","severity":1,"message":"130","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":23},{"ruleId":"106","severity":1,"message":"129","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":21},{"ruleId":"106","severity":1,"message":"125","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"130","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":23},{"ruleId":"106","severity":1,"message":"131","line":22,"column":17,"nodeType":"108","messageId":"109","endLine":22,"endColumn":18},{"ruleId":"106","severity":1,"message":"132","line":23,"column":17,"nodeType":"108","messageId":"109","endLine":23,"endColumn":18},{"ruleId":"106","severity":1,"message":"113","line":114,"column":13,"nodeType":"108","messageId":"109","endLine":114,"endColumn":18},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'history' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'style' is assigned a value but never used.","'PieceComponent' is defined but never used.","'PieceGeneratorComponent' is defined but never used.","'loadTimer' is assigned a value but never used.","'squareSize' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'turn' is assigned a value but never used.","'me' is assigned a value but never used.","'piece' is assigned a value but never used.","'React' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","'UtilFunctions' is defined but never used.","'RandomGenerator' is defined but never used.","'x' is assigned a value but never used.","'y' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]