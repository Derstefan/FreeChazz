{"ast":null,"code":"import React, { Component } from 'react';\n\nclass UtilFunctions extends Component {\n  constructor(height, width) {\n    this.height = height;\n    this.width = width;\n  }\n\n  static randomNumber(str) {\n    var seed = 1;\n\n    function random() {\n      var x = Math.sin(seed++) * 10000;\n      return x - Math.floor(x);\n    }\n  }\n\n  hash(str) {\n    var hash = 0,\n        i,\n        chr;\n    if (str.length === 0) return hash;\n\n    for (i = 0; i < str.length; i++) {\n      chr = str.charCodeAt(i);\n      hash = (hash << 5) - hash + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return hash;\n  }\n\n}\n\nexport default UtilFunctions;","map":{"version":3,"sources":["/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/generator/random-generator.jsx"],"names":["React","Component","UtilFunctions","constructor","height","width","randomNumber","str","seed","random","x","Math","sin","floor","hash","i","chr","length","charCodeAt"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAGlCE,EAAAA,WAAW,CAACC,MAAD,EAASC,KAAT,EAAgB;AACvB,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;;AAED,SAAOC,YAAP,CAAoBC,GAApB,EAAyB;AACrB,QAAIC,IAAI,GAAG,CAAX;;AACA,aAASC,MAAT,GAAkB;AACd,UAAIC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASJ,IAAI,EAAb,IAAmB,KAA3B;AACA,aAAOE,CAAC,GAAGC,IAAI,CAACE,KAAL,CAAWH,CAAX,CAAX;AACH;AAEJ;;AAGDI,EAAAA,IAAI,CAACP,GAAD,EAAM;AACN,QAAIO,IAAI,GAAG,CAAX;AAAA,QAAcC,CAAd;AAAA,QAAiBC,GAAjB;AACA,QAAIT,GAAG,CAACU,MAAJ,KAAe,CAAnB,EAAsB,OAAOH,IAAP;;AACtB,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGR,GAAG,CAACU,MAApB,EAA4BF,CAAC,EAA7B,EAAiC;AAC7BC,MAAAA,GAAG,GAAGT,GAAG,CAACW,UAAJ,CAAeH,CAAf,CAAN;AACAD,MAAAA,IAAI,GAAI,CAACA,IAAI,IAAI,CAAT,IAAcA,IAAf,GAAuBE,GAA9B;AACAF,MAAAA,IAAI,IAAI,CAAR,CAH6B,CAGlB;AACd;;AACD,WAAOA,IAAP;AACH;;AA3BiC;;AAgCtC,eAAeZ,aAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass UtilFunctions extends Component {\n\n\n    constructor(height, width) {\n        this.height = height;\n        this.width = width;\n    }\n\n    static randomNumber(str) {\n        var seed = 1;\n        function random() {\n            var x = Math.sin(seed++) * 10000;\n            return x - Math.floor(x);\n        }\n\n    }\n\n\n    hash(str) {\n        var hash = 0, i, chr;\n        if (str.length === 0) return hash;\n        for (i = 0; i < str.length; i++) {\n            chr = str.charCodeAt(i);\n            hash = ((hash << 5) - hash) + chr;\n            hash |= 0; // Convert to 32bit integer\n        }\n        return hash;\n    };\n\n\n}\n\nexport default UtilFunctions"]},"metadata":{},"sourceType":"module"}