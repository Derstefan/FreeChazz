{"ast":null,"code":"var _jsxFileName = \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/game/piece-card.component.jsx\";\nimport React, { Component } from 'react';\nimport Canvas from '../components/canvas.component';\nimport PieceGenerator from '../components/generator/piece-generator';\nimport mainService from '../services/main.service';\nimport PieceCard from './piece-card';\nimport Config from \"./config.json\";\n/**\n * \n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PieceCardComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //    pieceId: this.props.pieceId,\n      width: 160,\n      height: 300,\n      pieceImage: \"\",\n      piece: {},\n      pieceCard: new PieceCard(),\n      //consts\n      actionsSize: 9,\n      actionsOffsetX: 13,\n      actionsOffsetY: 160,\n      imageOffsetX: 32,\n      imageOffsetY: 10\n    };\n  }\n\n  componentDidMount() {\n    const {\n      pieceId\n    } = this.props;\n    console.log(\"pieceId \", pieceId);\n\n    if (pieceId) {\n      if (pieceId !== \"\") {\n        mainService.generatePiece(pieceId).then(res => {\n          var pg = new PieceGenerator(100, 120, \"\" + pieceId);\n          this.setState({\n            piece: res.data,\n            pieceImage: pg.drawPieceCanvas(\"P1\")\n          });\n          console.log(res.data);\n        });\n      }\n    }\n  } // static getDerivedStateFromProps(props, state) {\n  //     if (props.pieceId !== state.pieceId) {\n  //         //Change in props\n  //         console.log(props.pieceId);\n  //         return {\n  //             pieceId: props.pieceId\n  //         };\n  //     }\n  //     return null; // No change to state\n  // }\n\n\n  drawCanvas() {\n    const {\n      pieceCard,\n      piece,\n      pieceImage\n    } = this.state;\n\n    const draw = (ctx, frameCount) => {\n      ctx.canvas.width = Config.card.width;\n      ctx.canvas.height = Config.card.height;\n      ctx.drawImage(pieceCard.drawPieceCard(piece, pieceImage), 0, 0);\n    };\n\n    return draw;\n  }\n\n  render() {\n    const {\n      piece,\n      pieceImage\n    } = this.state;\n\n    if (piece && pieceImage) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Canvas, {\n          draw: this.drawCanvas()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 26\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this);\n    }\n\n    return \"\";\n  }\n\n}\n\nexport default PieceCardComponent;","map":{"version":3,"sources":["/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/game/piece-card.component.jsx"],"names":["React","Component","Canvas","PieceGenerator","mainService","PieceCard","Config","PieceCardComponent","constructor","props","state","width","height","pieceImage","piece","pieceCard","actionsSize","actionsOffsetX","actionsOffsetY","imageOffsetX","imageOffsetY","componentDidMount","pieceId","console","log","generatePiece","then","res","pg","setState","data","drawPieceCanvas","drawCanvas","draw","ctx","frameCount","canvas","card","drawImage","drawPieceCard","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA;AACA;AACA;;;;AACA,MAAMC,kBAAN,SAAiCN,SAAjC,CAA2C;AAEvCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEf,UAAMA,KAAN;AAGA,SAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,KAAK,EAAE,GAFE;AAGTC,MAAAA,MAAM,EAAE,GAHC;AAITC,MAAAA,UAAU,EAAE,EAJH;AAMTC,MAAAA,KAAK,EAAE,EANE;AAOTC,MAAAA,SAAS,EAAE,IAAIV,SAAJ,EAPF;AAST;AACAW,MAAAA,WAAW,EAAE,CAVJ;AAWTC,MAAAA,cAAc,EAAE,EAXP;AAYTC,MAAAA,cAAc,EAAE,GAZP;AAcTC,MAAAA,YAAY,EAAE,EAdL;AAeTC,MAAAA,YAAY,EAAE;AAfL,KAAb;AAiBH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKb,KAAzB;AAEAc,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,OAAxB;;AACA,QAAIA,OAAJ,EAAa;AACT,UAAIA,OAAO,KAAK,EAAhB,EAAoB;AAChBlB,QAAAA,WAAW,CAACqB,aAAZ,CAA0BH,OAA1B,EAAmCI,IAAnC,CAAwCC,GAAG,IAAI;AAC3C,cAAIC,EAAE,GAAG,IAAIzB,cAAJ,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B,KAAKmB,OAAlC,CAAT;AACA,eAAKO,QAAL,CAAc;AACVf,YAAAA,KAAK,EAAEa,GAAG,CAACG,IADD;AAEVjB,YAAAA,UAAU,EAAEe,EAAE,CAACG,eAAH,CAAmB,IAAnB;AAFF,WAAd;AAIAR,UAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACG,IAAhB;AACH,SAPD;AASH;AACJ;AACJ,GA3CsC,CA8CvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIAE,EAAAA,UAAU,GAAG;AACT,UAAM;AAAEjB,MAAAA,SAAF;AAAaD,MAAAA,KAAb;AAAoBD,MAAAA;AAApB,QAAmC,KAAKH,KAA9C;;AAEA,UAAMuB,IAAI,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqB;AAC9BD,MAAAA,GAAG,CAACE,MAAJ,CAAWzB,KAAX,GAAmBL,MAAM,CAAC+B,IAAP,CAAY1B,KAA/B;AACAuB,MAAAA,GAAG,CAACE,MAAJ,CAAWxB,MAAX,GAAoBN,MAAM,CAAC+B,IAAP,CAAYzB,MAAhC;AACAsB,MAAAA,GAAG,CAACI,SAAJ,CAAcvB,SAAS,CAACwB,aAAV,CAAwBzB,KAAxB,EAA+BD,UAA/B,CAAd,EAA0D,CAA1D,EAA6D,CAA7D;AACH,KAJD;;AAKA,WAAOoB,IAAP;AACH;;AAKDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAAE1B,MAAAA,KAAF;AAASD,MAAAA;AAAT,QAAwB,KAAKH,KAAnC;;AACA,QAAII,KAAK,IAAID,UAAb,EAAyB;AACrB,0BAAQ;AAAA,gCAAK,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAE,KAAKmB,UAAL;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;;AACD,WAAO,EAAP;AACH;;AA/EsC;;AAkF3C,eAAezB,kBAAf","sourcesContent":["import React, { Component } from 'react'\nimport Canvas from '../components/canvas.component';\nimport PieceGenerator from '../components/generator/piece-generator';\nimport mainService from '../services/main.service';\nimport PieceCard from './piece-card';\nimport Config from \"./config.json\";\n\n/**\n * \n */\nclass PieceCardComponent extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n\n        this.state = {\n            //    pieceId: this.props.pieceId,\n            width: 160,\n            height: 300,\n            pieceImage: \"\",\n\n            piece: {},\n            pieceCard: new PieceCard(),\n\n            //consts\n            actionsSize: 9,\n            actionsOffsetX: 13,\n            actionsOffsetY: 160,\n\n            imageOffsetX: 32,\n            imageOffsetY: 10\n        }\n    }\n\n    componentDidMount() {\n        const { pieceId } = this.props;\n\n        console.log(\"pieceId \", pieceId);\n        if (pieceId) {\n            if (pieceId !== \"\") {\n                mainService.generatePiece(pieceId).then(res => {\n                    var pg = new PieceGenerator(100, 120, \"\" + pieceId);\n                    this.setState({\n                        piece: res.data,\n                        pieceImage: pg.drawPieceCanvas(\"P1\")\n                    });\n                    console.log(res.data);\n                }\n                );\n            }\n        }\n    }\n\n\n    // static getDerivedStateFromProps(props, state) {\n    //     if (props.pieceId !== state.pieceId) {\n    //         //Change in props\n    //         console.log(props.pieceId);\n    //         return {\n    //             pieceId: props.pieceId\n    //         };\n    //     }\n    //     return null; // No change to state\n    // }\n\n\n\n    drawCanvas() {\n        const { pieceCard, piece, pieceImage } = this.state;\n\n        const draw = (ctx, frameCount) => {\n            ctx.canvas.width = Config.card.width;\n            ctx.canvas.height = Config.card.height;\n            ctx.drawImage(pieceCard.drawPieceCard(piece, pieceImage), 0, 0);\n        }\n        return draw;\n    }\n\n\n\n\n    render() {\n        const { piece, pieceImage } = this.state;\n        if (piece && pieceImage) {\n            return (<div><Canvas draw={this.drawCanvas()} /> </div>);\n        }\n        return \"\";\n    }\n}\n\nexport default PieceCardComponent"]},"metadata":{},"sourceType":"module"}