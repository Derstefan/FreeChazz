{"ast":null,"code":"import _classCallCheck from \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport serverConfig from \"../services/server-config.json\";\nvar MAIN_API_BASE_URL = \"http://\" + serverConfig.host + \":8080/api\";\n\nvar MainService = /*#__PURE__*/function () {\n  function MainService() {\n    _classCallCheck(this, MainService);\n  }\n\n  _createClass(MainService, [{\n    key: \"startNewGame\",\n    value: function startNewGame(name) {\n      return axios.get(MAIN_API_BASE_URL + \"/newgame/\" + name);\n    }\n  }, {\n    key: \"joinGame\",\n    value: function joinGame(gameId, name) {\n      return axios.get(MAIN_API_BASE_URL + \"/joingame/\" + gameId + \"/\" + name);\n    }\n  }, {\n    key: \"getGameData\",\n    value: function getGameData(gameId) {\n      return axios.get(MAIN_API_BASE_URL + \"/gamedata/\" + gameId, {\n        headers: this.authHeader()\n      });\n    }\n  }, {\n    key: \"getBoard\",\n    value: function getBoard(gameId) {\n      return axios.get(MAIN_API_BASE_URL + \"/board/\" + gameId, {\n        headers: this.authHeader()\n      });\n    }\n  }, {\n    key: \"play\",\n    value: function play(gameId, draw) {\n      return axios.post(MAIN_API_BASE_URL + \"/play/\" + gameId, draw, {\n        headers: this.authHeader()\n      });\n    }\n  }, {\n    key: \"pieceData\",\n    value: function pieceData(pieceId) {\n      return axios.get(MAIN_API_BASE_URL + \"/piece/\" + pieceId);\n    }\n  }, {\n    key: \"authHeader\",\n    value: function authHeader() {\n      var user = JSON.parse(localStorage.getItem(\"auth\"));\n\n      if (user && user.accessToken) {\n        return {\n          Authorization: \"Bearer \" + user.accessToken\n        };\n      }\n\n      return {};\n    }\n  }]);\n\n  return MainService;\n}();\n\nexport default new MainService();","map":{"version":3,"sources":["/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/services/main.service.jsx"],"names":["axios","serverConfig","MAIN_API_BASE_URL","host","MainService","name","get","gameId","headers","authHeader","draw","post","pieceId","user","JSON","parse","localStorage","getItem","accessToken","Authorization"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,IAAMC,iBAAiB,GAAG,YAAYD,YAAY,CAACE,IAAzB,GAAgC,WAA1D;;IAEMC,W;;;;;;;iCAIWC,I,EAAM;AACf,aAAOL,KAAK,CAACM,GAAN,CAAUJ,iBAAiB,GAAG,WAApB,GAAkCG,IAA5C,CAAP;AACH;;;6BAEQE,M,EAAQF,I,EAAM;AACnB,aAAOL,KAAK,CAACM,GAAN,CAAUJ,iBAAiB,GAAG,YAApB,GAAmCK,MAAnC,GAA4C,GAA5C,GAAkDF,IAA5D,CAAP;AACH;;;gCAEWE,M,EAAQ;AAChB,aAAOP,KAAK,CAACM,GAAN,CAAUJ,iBAAiB,GAAG,YAApB,GAAmCK,MAA7C,EAAqD;AAAEC,QAAAA,OAAO,EAAE,KAAKC,UAAL;AAAX,OAArD,CAAP;AACH;;;6BAEQF,M,EAAQ;AACb,aAAOP,KAAK,CAACM,GAAN,CAAUJ,iBAAiB,GAAG,SAApB,GAAgCK,MAA1C,EAAkD;AAAEC,QAAAA,OAAO,EAAE,KAAKC,UAAL;AAAX,OAAlD,CAAP;AACH;;;yBAEIF,M,EAAQG,I,EAAM;AACf,aAAOV,KAAK,CAACW,IAAN,CAAWT,iBAAiB,GAAG,QAApB,GAA+BK,MAA1C,EAAkDG,IAAlD,EAAwD;AAAEF,QAAAA,OAAO,EAAE,KAAKC,UAAL;AAAX,OAAxD,CAAP;AACH;;;8BAESG,O,EAAS;AACf,aAAOZ,KAAK,CAACM,GAAN,CAAUJ,iBAAiB,GAAG,SAApB,GAAgCU,OAA1C,CAAP;AACH;;;iCAEY;AACT,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;AAEA,UAAIJ,IAAI,IAAIA,IAAI,CAACK,WAAjB,EAA8B;AAC1B,eAAO;AAAEC,UAAAA,aAAa,EAAE,YAAYN,IAAI,CAACK;AAAlC,SAAP;AACH;;AACD,aAAO,EAAP;AACH;;;;;;AAKL,eAAe,IAAId,WAAJ,EAAf","sourcesContent":["import axios from 'axios';\nimport serverConfig from \"../services/server-config.json\";\n\nconst MAIN_API_BASE_URL = \"http://\" + serverConfig.host + \":8080/api\";\n\nclass MainService {\n\n\n\n    startNewGame(name) {\n        return axios.get(MAIN_API_BASE_URL + \"/newgame/\" + name)\n    }\n\n    joinGame(gameId, name) {\n        return axios.get(MAIN_API_BASE_URL + \"/joingame/\" + gameId + \"/\" + name)\n    }\n\n    getGameData(gameId) {\n        return axios.get(MAIN_API_BASE_URL + \"/gamedata/\" + gameId, { headers: this.authHeader() })\n    }\n\n    getBoard(gameId) {\n        return axios.get(MAIN_API_BASE_URL + \"/board/\" + gameId, { headers: this.authHeader() })\n    }\n\n    play(gameId, draw) {\n        return axios.post(MAIN_API_BASE_URL + \"/play/\" + gameId, draw, { headers: this.authHeader() })\n    }\n\n    pieceData(pieceId) {\n        return axios.get(MAIN_API_BASE_URL + \"/piece/\" + pieceId);\n    }\n\n    authHeader() {\n        const user = JSON.parse(localStorage.getItem(\"auth\"));\n\n        if (user && user.accessToken) {\n            return { Authorization: \"Bearer \" + user.accessToken };\n        }\n        return {};\n    }\n\n\n}\n\nexport default new MainService()"]},"metadata":{},"sourceType":"module"}