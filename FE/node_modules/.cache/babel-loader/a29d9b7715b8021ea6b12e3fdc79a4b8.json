{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/piece-data.component.jsx\";\nimport React, { Component } from 'react';\nimport Canvas from '../game/canvas.component';\nimport PieceGenerator from '../generator/piece-generator';\nimport mainService from '../services/main.service';\n\nclass PieceDataComponent extends Component {\n  constructor(props) {\n    super(props);\n    var pg = new PieceGenerator(300, 400, \"\" + this.props.match.params.id); //console.log(\"id: \", this.props.match.params.id);\n\n    this.state = {\n      pieceId: this.props.match.params.id,\n      width: 300,\n      height: 400,\n      pieceImage: pg.drawPieceCanvas(\"P1\"),\n      piece: {}\n    };\n    this.drawMoves = this.drawMoves.bind(this);\n  }\n\n  componentDidMount() {\n    mainService.pieceData(this.props.match.params.id).then(res => {\n      this.setState({\n        piece: res.data\n      });\n      console.log(res.data);\n    });\n  }\n  /**\n   * Statt der Tabelle eher ein svg ??\n   * @returns \n   */\n\n\n  drawMoves() {\n    const {\n      piece\n    } = this.state;\n    var rows = \"\";\n\n    if (piece.moves !== undefined) {\n      rows = piece.moves.actions.map(function (item, i) {\n        var entry = item.map(function (element, j) {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", element, \" \"]\n          }, j, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this);\n        });\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [\" \", entry, \" \"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this);\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-hover table-striped table-bordered\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n  drawMovesSVG() {\n    const {\n      piece\n    } = this.state;\n    var rows = \"\";\n\n    if (piece.moves !== undefined) {\n      rows = piece.moves.actions.map(function (item, i) {\n        var entry = item.map(function (element, j) {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", element, \" \"]\n          }, j, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this);\n        });\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [\" \", entry, \" \"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this);\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-hover table-striped table-bordered\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n  drawCanvas() {\n    const {\n      pieceImage,\n      width,\n      height\n    } = this.state;\n\n    const draw = (ctx, frameCount) => {\n      ctx.canvas.width = width;\n      ctx.canvas.height = height;\n      ctx.drawImage(pieceImage, 0, 0);\n    };\n\n    return draw;\n  }\n\n  render() {\n    const {\n      symbol,\n      selected,\n      canMove\n    } = this.props;\n    let style = {};\n    let str = symbol;\n\n    if (selected || canMove) {\n      style = {\n        color: 'green'\n      };\n\n      if (str === \"\") {//   str='X';\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.drawMoves(), \" \", /*#__PURE__*/_jsxDEV(Canvas, {\n        draw: this.drawCanvas()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default PieceDataComponent;","map":{"version":3,"sources":["/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/piece-data.component.jsx"],"names":["React","Component","Canvas","PieceGenerator","mainService","PieceDataComponent","constructor","props","pg","match","params","id","state","pieceId","width","height","pieceImage","drawPieceCanvas","piece","drawMoves","bind","componentDidMount","pieceData","then","res","setState","data","console","log","rows","moves","undefined","actions","map","item","i","entry","element","j","drawMovesSVG","drawCanvas","draw","ctx","frameCount","canvas","drawImage","render","symbol","selected","canMove","style","str","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Canvas from '../game/canvas.component';\nimport PieceGenerator from '../generator/piece-generator';\nimport mainService from '../services/main.service';\n\nclass PieceDataComponent extends Component {\n\n    constructor(props) {\n\n        super(props);\n        var pg = new PieceGenerator(300, 400, \"\" + this.props.match.params.id);\n        //console.log(\"id: \", this.props.match.params.id);\n        this.state = {\n            pieceId: this.props.match.params.id,\n            width: 300,\n            height: 400,\n            pieceImage: pg.drawPieceCanvas(\"P1\"),\n            piece: {}\n        }\n\n        this.drawMoves = this.drawMoves.bind(this);\n\n    }\n\n    componentDidMount() {\n        mainService.pieceData(this.props.match.params.id).then(res => {\n            this.setState({ piece: res.data });\n            console.log(res.data);\n\n        }\n        );\n    }\n\n\n\n\n    /**\n     * Statt der Tabelle eher ein svg ??\n     * @returns \n     */\n    drawMoves() {\n        const { piece } = this.state;\n        var rows = \"\";\n        if (piece.moves !== undefined) {\n            rows = piece.moves.actions.map(function (item, i) {\n                var entry = item.map(function (element, j) {\n                    return (\n                        <td key={j}> {element} </td>\n                    );\n                });\n                return (\n                    <tr key={i}> {entry} </tr>\n                );\n            });\n        }\n\n        return (\n            <table className=\"table-hover table-striped table-bordered\">\n                <tbody>\n                    {rows}\n                </tbody>\n            </table>\n        );\n    }\n\n    drawMovesSVG() {\n        const { piece } = this.state;\n        var rows = \"\";\n        if (piece.moves !== undefined) {\n            rows = piece.moves.actions.map(function (item, i) {\n                var entry = item.map(function (element, j) {\n                    return (\n                        <td key={j}> {element} </td>\n                    );\n                });\n                return (\n                    <tr key={i}> {entry} </tr>\n                );\n            });\n        }\n\n        return (\n            <table className=\"table-hover table-striped table-bordered\">\n                <tbody>\n                    {rows}\n                </tbody>\n            </table>\n        );\n    }\n\n\n\n\n\n    drawCanvas() {\n        const { pieceImage, width, height } = this.state;\n\n        const draw = (ctx, frameCount) => {\n            ctx.canvas.width = width\n            ctx.canvas.height = height\n            ctx.drawImage(pieceImage, 0, 0);\n        }\n        return draw;\n    }\n\n\n\n\n    render() {\n        const { symbol, selected, canMove } = this.props;\n        let style = {};\n        let str = symbol\n        if ((selected || canMove)) {\n            style = { color: 'green' };\n            if (str === \"\") {\n                //   str='X';\n            }\n        }\n        return (<div>{this.drawMoves()} <Canvas draw={this.drawCanvas()} /></div>);\n    }\n}\n\nexport default PieceDataComponent"]},"metadata":{},"sourceType":"module"}