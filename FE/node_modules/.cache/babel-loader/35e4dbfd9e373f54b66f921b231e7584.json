{"ast":null,"code":"import _classCallCheck from \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Component } from 'react';\n\nvar RandomGenerator = /*#__PURE__*/function (_Component) {\n  _inherits(RandomGenerator, _Component);\n\n  function RandomGenerator(str) {\n    var _this;\n\n    _classCallCheck(this, RandomGenerator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RandomGenerator).call(this));\n    _this.tempSeed = _this.hash(str); // console.log(\"str=\", str, \"seed=\", this.tempSeed);\n\n    return _this;\n  }\n\n  _createClass(RandomGenerator, [{\n    key: \"random\",\n    value: function random() {\n      var x = Math.sin(this.tempSeed) * 10000;\n      this.tempSeed = Math.sin(this.tempSeed);\n      return x - Math.floor(x);\n    }\n  }, {\n    key: \"randNumOfRange\",\n    value: function randNumOfRange(a, b) {\n      return Math.round(this.random() * (b - a) + a);\n    }\n  }, {\n    key: \"hash\",\n    value: function hash(str) {\n      var hash = 0,\n          i,\n          chr;\n      if (str.length === 0) return hash;\n\n      for (i = 0; i < str.length; i++) {\n        chr = str.charCodeAt(i);\n        hash = (hash << 5) - hash + chr;\n        hash |= 0; // Convert to 32bit integer\n      }\n\n      return hash;\n    }\n  }]);\n\n  return RandomGenerator;\n}(Component);\n\nexport default RandomGenerator;","map":{"version":3,"sources":["/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/generator/random-generator.jsx"],"names":["Component","RandomGenerator","str","tempSeed","hash","x","Math","sin","floor","a","b","round","random","i","chr","length","charCodeAt"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;IAEMC,e;;;AAGF,2BAAYC,GAAZ,EAAiB;AAAA;;AAAA;;AACb;AACA,UAAKC,QAAL,GAAgB,MAAKC,IAAL,CAAUF,GAAV,CAAhB,CAFa,CAIb;;AAJa;AAKhB;;;;6BAEQ;AACL,UAAIG,CAAC,GAAGC,IAAI,CAACC,GAAL,CAAS,KAAKJ,QAAd,IAA0B,KAAlC;AACA,WAAKA,QAAL,GAAgBG,IAAI,CAACC,GAAL,CAAS,KAAKJ,QAAd,CAAhB;AACA,aAAOE,CAAC,GAAGC,IAAI,CAACE,KAAL,CAAWH,CAAX,CAAX;AACH;;;mCAEcI,C,EAAGC,C,EAAG;AAEjB,aAAOJ,IAAI,CAACK,KAAL,CAAW,KAAKC,MAAL,MAAiBF,CAAC,GAAGD,CAArB,IAA0BA,CAArC,CAAP;AACH;;;yBAGIP,G,EAAK;AACN,UAAIE,IAAI,GAAG,CAAX;AAAA,UAAcS,CAAd;AAAA,UAAiBC,GAAjB;AACA,UAAIZ,GAAG,CAACa,MAAJ,KAAe,CAAnB,EAAsB,OAAOX,IAAP;;AACtB,WAAKS,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGX,GAAG,CAACa,MAApB,EAA4BF,CAAC,EAA7B,EAAiC;AAC7BC,QAAAA,GAAG,GAAGZ,GAAG,CAACc,UAAJ,CAAeH,CAAf,CAAN;AACAT,QAAAA,IAAI,GAAI,CAACA,IAAI,IAAI,CAAT,IAAcA,IAAf,GAAuBU,GAA9B;AACAV,QAAAA,IAAI,IAAI,CAAR,CAH6B,CAGlB;AACd;;AACD,aAAOA,IAAP;AACH;;;;EA/ByBJ,S;;AAoC9B,eAAeC,eAAf","sourcesContent":["import { Component } from 'react'\n\nclass RandomGenerator extends Component {\n\n\n    constructor(str) {\n        super();\n        this.tempSeed = this.hash(str);\n\n        // console.log(\"str=\", str, \"seed=\", this.tempSeed);\n    }\n\n    random() {\n        var x = Math.sin(this.tempSeed) * 10000;\n        this.tempSeed = Math.sin(this.tempSeed);\n        return x - Math.floor(x);\n    }\n\n    randNumOfRange(a, b) {\n\n        return Math.round(this.random() * (b - a) + a);\n    }\n\n\n    hash(str) {\n        var hash = 0, i, chr;\n        if (str.length === 0) return hash;\n        for (i = 0; i < str.length; i++) {\n            chr = str.charCodeAt(i);\n            hash = ((hash << 5) - hash) + chr;\n            hash |= 0; // Convert to 32bit integer\n        }\n        return hash;\n    }\n}\n\n\n\nexport default RandomGenerator"]},"metadata":{},"sourceType":"module"}