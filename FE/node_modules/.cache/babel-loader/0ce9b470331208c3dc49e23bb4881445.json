{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/game.component.jsx\";\nimport React, { Component } from 'react';\nimport mainService from '../services/main.service';\nimport Canvas from './canvas.component';\nimport PieceComponent from './piece.component';\n\nclass GameComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameId: JSON.parse(localStorage.getItem(\"auth\")).gameId,\n      inviteLink: \"http://localhost:3000/joingame/\" + JSON.parse(localStorage.getItem(\"auth\")).gameId,\n      player1: {},\n      player2: {},\n      width: 16,\n      height: 16,\n      boardData: {},\n      // data from server\n      boardView: [],\n      // symbol, playertype, selected, canMoveTo\n      selectedField: {}\n    };\n    this.loadGameData();\n    this.loadBoard();\n    this.selectField = this.selectField.bind(this);\n  }\n\n  loadGameData() {\n    const {\n      gameId\n    } = this.state;\n    mainService.getGameData(gameId).then(res => {\n      //console.log(res.data);\n      this.setState({\n        player1: res.data.player1,\n        player2: res.data.player2\n      });\n    });\n  }\n\n  loadBoard() {\n    const {\n      gameId\n    } = this.state;\n    mainService.getBoard(gameId).then(res => {\n      let bv = res.data.board;\n\n      for (let i = 0; i < bv.length; i++) {\n        for (let j = 0; j < bv[0].length; j++) {\n          if (res.data.board[i][j] === null) {\n            bv[i][j] = {\n              selected: false,\n              canMoveTo: false,\n              symbol: \"\",\n              owner: \"\",\n              possibleMoves: []\n            };\n          } else {\n            bv[i][j] = {\n              selected: false,\n              canMoveTo: false,\n              symbol: bv[i][j].symbol,\n              owner: bv[i][j].owner,\n              possibleMoves: bv[i][j].possibleMoves\n            };\n          }\n        }\n      }\n\n      console.log(bv);\n      this.setState({\n        boardData: res.data,\n        boardView: bv,\n        width: bv[0].length,\n        height: bv.length\n      });\n    });\n  }\n\n  renderBoard() {\n    const {\n      width,\n      height\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"chess-board\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [...Array(height).keys()].map(y => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [...Array(width).keys()].map(x => this.renderField(x, y))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 14\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }, this);\n  }\n\n  renderField(x, y) {\n    const {\n      boardView,\n      selectedField\n    } = this.state;\n    let symbol = \"\";\n    let className = \"dark\";\n    let selected = false;\n    let canMove = false;\n\n    if ((x + y) % 2 === 0) {\n      className = \"white\";\n    }\n\n    if (selectedField.x === x && selectedField.y === y) {\n      selected = true;\n      className = \"selected\";\n    }\n\n    if (JSON.stringify(boardView) !== \"[]\") {\n      symbol = boardView[y][x].symbol;\n\n      if (boardView[y][x].canMoveTo) {\n        canMove = boardView[y][x].canMoveTo;\n        className = \"canmove\";\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      class: className,\n      onClick: () => this.selectField(x, y),\n      onMouseOver: () => this.mouseOverField(x, y),\n      children: /*#__PURE__*/_jsxDEV(PieceComponent, {\n        symbol: symbol,\n        selected: selected,\n        canMove: canMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 118\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this);\n  }\n\n  selectField(x, y) {\n    const {\n      boardView\n    } = this.state;\n    let newBoard = boardView;\n\n    if (boardView[y][x].canMoveTo) {//\n    }\n\n    const possibleMoves = newBoard[y][x].possibleMoves;\n\n    for (let i = 0; i < boardView.length; i++) {\n      for (let j = 0; j < boardView[0].length; j++) {\n        newBoard[i][j].canMoveTo = false;\n      }\n    }\n\n    for (let i = 0; i < possibleMoves.length; i++) {\n      newBoard[possibleMoves[i].y][possibleMoves[i].x].canMoveTo = true;\n      console.log(\"move: \", possibleMoves[i].x, \", \", possibleMoves[i].y);\n    }\n\n    this.setState({\n      boardView: newBoard,\n      selectedField: {\n        x: x,\n        y: y\n      }\n    }); //console.log(boardView);\n  }\n\n  removeMoveTos(boardView) {}\n\n  mouseOverField(x, y) {//    console.log(\"mouseOver:\",x,\",\",y);\n  }\n\n  render() {\n    const {\n      inviteLink,\n      player1,\n      player2\n    } = this.state;\n    var ctx = null;\n\n    const draw = (ctx, frameCount) => {\n      // ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n      // ctx.fillStyle = '#000000'\n      // ctx.beginPath()\n      // ctx.arc(50, 100, 20*Math.sin(frameCount*0.05)**2, 0, 2*Math.PI)\n      // ctx.fill()\n      var gameMap = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      var tileW = 40,\n          tileH = 40;\n      var mapW = 10,\n          mapH = 10;\n      var currentSecond = 0,\n          frameCount = 0,\n          framesLastSecond = 0;\n      var sec = Math.floor(Date.now() / 1000);\n\n      if (sec != currentSecond) {\n        currentSecond = sec;\n        framesLastSecond = frameCount;\n        frameCount = 1;\n      } else {\n        frameCount++;\n      }\n\n      for (var y = 0; y < mapH; ++y) {\n        for (var x = 0; x < mapW; ++x) {\n          switch (gameMap[y * mapW + x]) {\n            case 0:\n              ctx.fillStyle = \"#685b48\";\n              break;\n\n            default:\n              ctx.fillStyle = \"#5aa457\";\n          }\n\n          ctx.fillRect(x * tileW, y * tileH, tileW, tileH);\n        }\n      }\n\n      ctx.fillStyle = \"#ff0000\";\n      ctx.fillText(\"FPS: \" + framesLastSecond, 10, 20);\n      requestAnimationFrame(drawGame);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [inviteLink, /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), \"here is the Game: Player1: \", player1 && player1.name, \" \", player2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Player2: \", player2.name]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centered\",\n          children: this.renderBoard()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n        draw: draw\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GameComponent;","map":{"version":3,"sources":["/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/game.component.jsx"],"names":["React","Component","mainService","Canvas","PieceComponent","GameComponent","constructor","props","state","gameId","JSON","parse","localStorage","getItem","inviteLink","player1","player2","width","height","boardData","boardView","selectedField","loadGameData","loadBoard","selectField","bind","getGameData","then","res","setState","data","getBoard","bv","board","i","length","j","selected","canMoveTo","symbol","owner","possibleMoves","console","log","renderBoard","Array","keys","map","y","x","renderField","className","canMove","stringify","mouseOverField","newBoard","removeMoveTos","render","ctx","draw","frameCount","gameMap","tileW","tileH","mapW","mapH","currentSecond","framesLastSecond","sec","Math","floor","Date","now","fillStyle","fillRect","fillText","requestAnimationFrame","drawGame","name","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport mainService from '../services/main.service';\nimport Canvas from './canvas.component';\nimport PieceComponent from './piece.component';\n\nclass GameComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            gameId: JSON.parse(localStorage.getItem(\"auth\")).gameId,\n            inviteLink: \"http://localhost:3000/joingame/\" + JSON.parse(localStorage.getItem(\"auth\")).gameId,\n            player1: {},\n            player2: {},\n            width:16,\n            height:16,\n            boardData: {}, // data from server\n            boardView: [], // symbol, playertype, selected, canMoveTo\n            selectedField:{}\n        }\n        this.loadGameData();\n        this.loadBoard();\n        this.selectField = this.selectField.bind(this);\n    }\n\n    loadGameData() {\n        const { gameId } = this.state;\n        mainService.getGameData(gameId).then((res) => {\n            //console.log(res.data);\n            this.setState({ player1: res.data.player1, player2: res.data.player2 });\n        });\n    \n    }\n\n    \n\n    loadBoard(){\n        const { gameId } = this.state;\n        mainService.getBoard(gameId).then((res) => {\n            let bv=res.data.board;\n            \n            for (let i = 0; i < bv.length; i++) {\n                for (let j = 0; j < bv[0].length; j++) {\n                    if(res.data.board[i][j]===null){\n                        bv[i][j]={selected:false,\n                            canMoveTo: false,\n                            symbol: \"\",\n                            owner: \"\",\n                            possibleMoves: []};\n                    } else {\n                        bv[i][j]={selected:false,\n                        canMoveTo: false,\n                        symbol: bv[i][j].symbol,\n                        owner: bv[i][j].owner,\n                        possibleMoves: bv[i][j].possibleMoves};\n                    }\n                }\n            }\n            console.log(bv);\n            this.setState({ boardData:res.data,boardView:bv,width:bv[0].length,height:bv.length});\n\n        });\n    }\n\n    renderBoard() {\n        const {width,height} = this.state;\n\n        return(<table class=\"chess-board\">\n             <tbody>\n            {[...Array(height).keys()].map((y)=>\n            (<tr>\n                {[...Array(width).keys()].map((x)=>this.renderField(x,y))}</tr>))}\n            </tbody>\n            </table>);\n\n\n\n    }\n\n    renderField(x,y){\n        const {boardView,selectedField} = this.state;\n        let symbol = \"\";\n        let className = \"dark\";\n        let selected = false;\n        let canMove = false;\n\n        if((x+y) % 2===0){\n           className=\"white\"\n        }\n        if(selectedField.x===x && selectedField.y===y){\n            selected = true;\n            className=\"selected\";\n        }\n        if(JSON.stringify(boardView)!==\"[]\"){\n            symbol = boardView[y][x].symbol;\n            if(boardView[y][x].canMoveTo){\n                canMove = boardView[y][x].canMoveTo;\n                className=\"canmove\";\n            }\n        }\n\n        return (<td class={className} onClick={()=>this.selectField(x,y)} onMouseOver={()=>this.mouseOverField(x,y)}><PieceComponent symbol={symbol} selected={selected} canMove={canMove}></PieceComponent></td>);\n    }\n\n    selectField(x,y){\n        const {boardView} =this.state;\n        let newBoard=boardView;\n        if(boardView[y][x].canMoveTo){\n            //\n        }\n        const possibleMoves =newBoard[y][x].possibleMoves; \n        for (let i = 0; i < boardView.length; i++) {\n            for (let j = 0; j < boardView[0].length; j++) {\n                newBoard[i][j].canMoveTo=false;\n            }\n        }\n\n        for(let i=0;i<possibleMoves.length;i++){\n            newBoard[possibleMoves[i].y][possibleMoves[i].x].canMoveTo = true;\n            console.log(\"move: \",possibleMoves[i].x, \", \", possibleMoves[i].y);\n        }\n        this.setState({boardView:newBoard, selectedField:{x:x,y:y}});\n        //console.log(boardView);\n    }\n\n    removeMoveTos(boardView){\n\n    }\n\n    mouseOverField(x,y){\n        //    console.log(\"mouseOver:\",x,\",\",y);\n    }\n\n\n    render() {\n        const { inviteLink, player1, player2 } = this.state;\n        var ctx = null;\n\n        const draw = (ctx, frameCount) => {\n            // ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n            // ctx.fillStyle = '#000000'\n            // ctx.beginPath()\n            // ctx.arc(50, 100, 20*Math.sin(frameCount*0.05)**2, 0, 2*Math.PI)\n            // ctx.fill()\n            var gameMap = [\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n                0, 1, 0, 0, 0, 1, 0, 0, 0, 0,\n                0, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n                0, 1, 0, 1, 0, 0, 0, 1, 1, 0,\n                0, 1, 0, 1, 0, 1, 0, 0, 1, 0,\n                0, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n                0, 1, 0, 0, 0, 0, 0, 1, 0, 0,\n                0, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n            ];\n            var tileW = 40, tileH = 40;\n            var mapW = 10, mapH = 10;\n            var currentSecond = 0, frameCount = 0, framesLastSecond = 0;\n\n\tvar sec = Math.floor(Date.now()/1000);\n\tif(sec!=currentSecond)\n\t{\n\t\tcurrentSecond = sec;\n\t\tframesLastSecond = frameCount;\n\t\tframeCount = 1;\n\t}\n\telse { frameCount++; }\n\n\tfor(var y = 0; y < mapH; ++y)\n\t{\n\t\tfor(var x = 0; x < mapW; ++x)\n\t\t{\n\t\t\tswitch(gameMap[((y*mapW)+x)])\n\t\t\t{\n\t\t\t\tcase 0:\n\t\t\t\t\tctx.fillStyle = \"#685b48\";\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tctx.fillStyle = \"#5aa457\";\n\t\t\t}\n\n\t\t\tctx.fillRect( x*tileW, y*tileH, tileW, tileH);\n\t\t}\n\t}\n\n\tctx.fillStyle = \"#ff0000\";\n\tctx.fillText(\"FPS: \" + framesLastSecond, 10, 20);\n\n\trequestAnimationFrame(drawGame);\n          }\n          \n        return (\n            <div>\n                {inviteLink}\n                <div></div>\n                here is the Game: Player1: {player1 && player1.name} {player2 && <>Player2: {player2.name}</>}\n                <div></div>\n\n                <div style={{display: 'flex', justifyContent: 'center'}}>\n                <div className=\"centered\">\n                    {this.renderBoard()}\n                </div>\n            </div>\n            <Canvas draw={draw} />\n            </div>\n        )\n    }\n}\n\nexport default GameComponent"]},"metadata":{},"sourceType":"module"}