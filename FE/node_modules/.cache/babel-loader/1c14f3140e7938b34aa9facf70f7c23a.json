{"ast":null,"code":"import _classCallCheck from \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/game/piece-card.component.jsx\";\nimport React, { Component } from 'react';\nimport Canvas from '../components/canvas.component';\nimport PieceGenerator from '../components/generator/piece-generator';\nimport mainService from '../services/main.service';\n/**\n * \n */\n\nvar PieceCardComponent = /*#__PURE__*/function (_Component) {\n  _inherits(PieceCardComponent, _Component);\n\n  function PieceCardComponent(props) {\n    var _this;\n\n    _classCallCheck(this, PieceCardComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PieceCardComponent).call(this, props));\n    _this.state = {\n      //    pieceId: this.props.pieceId,\n      width: 160,\n      height: 300,\n      pieceImage: \"\",\n      piece: {},\n      //consts\n      actionsSize: 9,\n      actionsOffsetX: 13,\n      actionsOffsetY: 160,\n      imageOffsetX: 32,\n      imageOffsetY: 10\n    };\n    return _this;\n  }\n\n  _createClass(PieceCardComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var pieceId = this.props.pieceId;\n      console.log(\"pieceId \", pieceId);\n\n      if (pieceId) {\n        if (pieceId !== \"\") {\n          mainService.pieceData(pieceId).then(function (res) {\n            var pg = new PieceGenerator(100, 120, \"\" + pieceId);\n\n            _this2.setState({\n              piece: res.data,\n              pieceImage: pg.drawPieceCanvas(\"P1\")\n            }); // console.log(res.data);\n\n          });\n        }\n      }\n    } // static getDerivedStateFromProps(props, state) {\n    //     if (props.pieceId !== state.pieceId) {\n    //         //Change in props\n    //         console.log(props.pieceId);\n    //         return {\n    //             pieceId: props.pieceId\n    //         };\n    //     }\n    //     return null; // No change to state\n    // }\n\n  }, {\n    key: \"drawCanvas\",\n    value: function drawCanvas() {\n      var _this$state = this.state,\n          piece = _this$state.piece,\n          pieceImage = _this$state.pieceImage,\n          width = _this$state.width,\n          height = _this$state.height,\n          actionsSize = _this$state.actionsSize,\n          actionsOffsetX = _this$state.actionsOffsetX,\n          actionsOffsetY = _this$state.actionsOffsetY;\n      console.log(piece);\n\n      var draw = function draw(ctx, frameCount) {\n        ctx.canvas.width = width;\n        ctx.canvas.height = height;\n\n        if (piece.moves !== undefined) {\n          ctx.drawImage(pieceImage, 32, 10); // draw actions\n\n          for (var i = 0; i < piece.moves.actions.length; i++) {\n            for (var j = 0; j < piece.moves.actions[0].length; j++) {\n              if (piece.moves.actions[i][j] !== \"-\") {\n                if (piece.moves.actions[i][j] === \"P\") {\n                  ctx.fillStyle = \"#11AA11\";\n                  ctx.fillRect(actionsOffsetX + i * actionsSize, actionsOffsetY + j * actionsSize, actionsSize, actionsSize);\n                } else if (piece.moves.actions[i][j] === \"E\") {\n                  ctx.fillStyle = \"#BB1111\";\n                  ctx.fillRect(actionsOffsetX + i * actionsSize, actionsOffsetY + j * actionsSize, actionsSize, actionsSize);\n                } else if (piece.moves.actions[i][j] === \"F\") {\n                  ctx.fillStyle = \"#1111BB\";\n                  ctx.fillRect(actionsOffsetX + i * actionsSize, actionsOffsetY + j * actionsSize, actionsSize, actionsSize);\n                } else {\n                  ctx.fillStyle = \"#666666\";\n                  ctx.fillRect(actionsOffsetX + i * actionsSize, actionsOffsetY + j * actionsSize, actionsSize, actionsSize);\n                }\n              }\n            }\n          }\n\n          ctx.lineWidth = 0.5;\n          ctx.strokeStyle = \"#AAAAAA\";\n\n          for (i = 0; i < piece.moves.actions.length + 1; i++) {\n            //  ctx.drawline(actionsOffsetX + i * actionsSize, actionsOffsetY, actionsOffsetX + i * actionsSize, actionsOffsetX + piece.moves.actions.length + 1 * actionsSize);\n            ctx.beginPath();\n            ctx.moveTo(actionsOffsetX + i * actionsSize, actionsOffsetY);\n            ctx.lineTo(actionsOffsetX + i * actionsSize, actionsOffsetY + piece.moves.actions.length * actionsSize);\n            ctx.stroke();\n            ctx.beginPath();\n            ctx.moveTo(actionsOffsetX, actionsOffsetY + i * actionsSize);\n            ctx.lineTo(actionsOffsetX + piece.moves.actions.length * actionsSize, actionsOffsetY + i * actionsSize);\n            ctx.stroke();\n          }\n        }\n      };\n\n      return draw;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Canvas, {\n        draw: this.drawCanvas(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 22\n        }\n      }), \" \");\n    }\n  }]);\n\n  return PieceCardComponent;\n}(Component);\n\nexport default PieceCardComponent;","map":{"version":3,"sources":["/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/game/piece-card.component.jsx"],"names":["React","Component","Canvas","PieceGenerator","mainService","PieceCardComponent","props","state","width","height","pieceImage","piece","actionsSize","actionsOffsetX","actionsOffsetY","imageOffsetX","imageOffsetY","pieceId","console","log","pieceData","then","res","pg","setState","data","drawPieceCanvas","draw","ctx","frameCount","canvas","moves","undefined","drawImage","i","actions","length","j","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","drawCanvas"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Canvas from '../components/canvas.component';\nimport PieceGenerator from '../components/generator/piece-generator';\nimport mainService from '../services/main.service';\n\n/**\n * \n */\nclass PieceCardComponent extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n\n        this.state = {\n            //    pieceId: this.props.pieceId,\n            width: 160,\n            height: 300,\n            pieceImage: \"\",\n\n            piece: {},\n\n            //consts\n            actionsSize: 9,\n            actionsOffsetX: 13,\n            actionsOffsetY: 160,\n\n            imageOffsetX: 32,\n            imageOffsetY: 10\n        }\n\n    }\n\n    componentDidMount() {\n        const { pieceId } = this.props;\n\n        console.log(\"pieceId \", pieceId);\n        if (pieceId) {\n            if (pieceId !== \"\") {\n                mainService.pieceData(pieceId).then(res => {\n                    var pg = new PieceGenerator(100, 120, \"\" + pieceId);\n                    this.setState({\n                        piece: res.data,\n                        pieceImage: pg.drawPieceCanvas(\"P1\")\n                    });\n                    // console.log(res.data);\n\n                }\n                );\n            }\n        }\n    }\n\n\n    // static getDerivedStateFromProps(props, state) {\n    //     if (props.pieceId !== state.pieceId) {\n    //         //Change in props\n    //         console.log(props.pieceId);\n    //         return {\n    //             pieceId: props.pieceId\n    //         };\n    //     }\n    //     return null; // No change to state\n    // }\n\n\n\n    drawCanvas() {\n        const { piece, pieceImage, width, height, actionsSize, actionsOffsetX, actionsOffsetY } = this.state;\n        console.log(piece);\n        const draw = (ctx, frameCount) => {\n            ctx.canvas.width = width\n            ctx.canvas.height = height\n            if (piece.moves !== undefined) {\n                ctx.drawImage(pieceImage, 32, 10);\n                // draw actions\n\n                for (var i = 0; i < piece.moves.actions.length; i++) {\n                    for (var j = 0; j < piece.moves.actions[0].length; j++) {\n                        if (piece.moves.actions[i][j] !== \"-\") {\n                            if (piece.moves.actions[i][j] === \"P\") {\n                                ctx.fillStyle = \"#11AA11\";\n                                ctx.fillRect(actionsOffsetX + i * actionsSize, actionsOffsetY + j * actionsSize, actionsSize, actionsSize);\n                            } else if (piece.moves.actions[i][j] === \"E\") {\n                                ctx.fillStyle = \"#BB1111\";\n                                ctx.fillRect(actionsOffsetX + i * actionsSize, actionsOffsetY + j * actionsSize, actionsSize, actionsSize);\n                            } else if (piece.moves.actions[i][j] === \"F\") {\n                                ctx.fillStyle = \"#1111BB\";\n                                ctx.fillRect(actionsOffsetX + i * actionsSize, actionsOffsetY + j * actionsSize, actionsSize, actionsSize);\n                            } else {\n                                ctx.fillStyle = \"#666666\";\n                                ctx.fillRect(actionsOffsetX + i * actionsSize, actionsOffsetY + j * actionsSize, actionsSize, actionsSize);\n                            }\n                        }\n                    }\n                }\n\n                ctx.lineWidth = 0.5;\n                ctx.strokeStyle = \"#AAAAAA\";\n                for (i = 0; i < piece.moves.actions.length + 1; i++) {\n                    //  ctx.drawline(actionsOffsetX + i * actionsSize, actionsOffsetY, actionsOffsetX + i * actionsSize, actionsOffsetX + piece.moves.actions.length + 1 * actionsSize);\n\n\n                    ctx.beginPath();\n                    ctx.moveTo(actionsOffsetX + i * actionsSize, actionsOffsetY);\n                    ctx.lineTo(actionsOffsetX + i * actionsSize, actionsOffsetY + (piece.moves.actions.length) * actionsSize);\n                    ctx.stroke();\n\n                    ctx.beginPath();\n                    ctx.moveTo(actionsOffsetX, actionsOffsetY + i * actionsSize);\n                    ctx.lineTo(actionsOffsetX + (piece.moves.actions.length) * actionsSize, actionsOffsetY + i * actionsSize);\n                    ctx.stroke();\n\n                }\n            }\n\n\n\n\n        }\n        return draw;\n    }\n\n\n\n\n    render() {\n\n        return (<div><Canvas draw={this.drawCanvas()} /> </div>);\n    }\n}\n\nexport default PieceCardComponent"]},"metadata":{},"sourceType":"module"}