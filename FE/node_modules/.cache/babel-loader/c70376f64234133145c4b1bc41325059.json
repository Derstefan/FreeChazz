{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/game.component.jsx\";\nimport React, { Component } from 'react';\nimport mainService from '../services/main.service';\nimport PieceComponent from './piece.component';\n\nclass GameComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameId: JSON.parse(localStorage.getItem(\"auth\")).gameId,\n      inviteLink: \"http://localhost:3000/joingame/\" + JSON.parse(localStorage.getItem(\"auth\")).gameId,\n      player1: {},\n      player2: {},\n      width: 16,\n      height: 16,\n      board: {},\n      selectedField: {}\n    };\n    this.loadGameData();\n    this.loadBoard();\n    this.selectField = this.selectField.bind(this);\n  }\n\n  loadGameData() {\n    const {\n      gameId\n    } = this.state;\n    mainService.getGameData(gameId).then(res => {\n      //console.log(res.data);\n      this.setState({\n        player1: res.data.player1,\n        player2: res.data.player2\n      });\n    });\n  }\n\n  loadBoard() {\n    const {\n      gameId\n    } = this.state;\n    mainService.getBoard(gameId).then(res => {\n      console.log(\"board:\", res.data);\n      this.setState({\n        board: res.data\n      });\n    });\n  }\n\n  renderBoard() {\n    const {\n      width,\n      height\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"chess-board\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [...Array(width).keys()].map(x => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [...Array(height).keys()].map(y => this.renderField(x, y))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n\n  renderField(x, y) {\n    const {\n      board,\n      selectedField\n    } = this.state;\n    let symbol = \"\";\n    let className = \"dark\";\n    let selected = false;\n    let canMove = false;\n\n    if (board.board) {\n      if (board.board[x][y] !== null) {\n        symbol = board.board[x][y].symbol;\n\n        if (board.board[x][y].canMove) {\n          canMove = board.board[x][y].canMove;\n        }\n      }\n    }\n\n    if ((x + y) % 2 === 0) {\n      className = \"white\";\n    }\n\n    if (selectedField.x === x && selectedField.y === y) {\n      selected = true;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      class: className,\n      onClick: () => this.selectField(x, y),\n      onMouseOver: () => this.mouseOverField(x, y),\n      children: /*#__PURE__*/_jsxDEV(PieceComponent, {\n        symbol: symbol,\n        selected: selected,\n        canMove: canMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 118\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this);\n  }\n\n  selectField(x, y) {\n    const {\n      board\n    } = this.state;\n\n    if (board.board[x][y]) {\n      this.setState({\n        selectedField: {\n          x: x,\n          y: y\n        }\n      });\n      const possibleMoves = board.board[x][y].possibleMoves;\n      let newBoard = board;\n\n      for (let i = 0; i < possibleMoves.length; i++) {\n        if (newBoard.board[possibleMoves[i].x][possibleMoves[i].y] !== null) {\n          newBoard.board[possibleMoves[i].x][possibleMoves[i].y].canMove = true;\n        } else {\n          newBoard.board[possibleMoves[i].x][possibleMoves[i].y] = {\n            canMove: true\n          };\n        }\n      }\n\n      this.setState({\n        board: newBoard\n      });\n    } else {\n      this.setState({\n        selectedField: {}\n      });\n    }\n\n    console.log(board);\n  }\n\n  mouseOverField(x, y) {//    console.log(\"mouseOver:\",x,\",\",y);\n  }\n\n  render() {\n    const {\n      inviteLink,\n      player1,\n      player2\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [inviteLink, /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), \"here is the Game: Player1: \", player1 && player1.name, \" \", player2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Player2: \", player2.name]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centered\",\n          children: this.renderBoard()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GameComponent;","map":{"version":3,"sources":["/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/game.component.jsx"],"names":["React","Component","mainService","PieceComponent","GameComponent","constructor","props","state","gameId","JSON","parse","localStorage","getItem","inviteLink","player1","player2","width","height","board","selectedField","loadGameData","loadBoard","selectField","bind","getGameData","then","res","setState","data","getBoard","console","log","renderBoard","Array","keys","map","x","y","renderField","symbol","className","selected","canMove","mouseOverField","possibleMoves","newBoard","i","length","render","name","display","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAElCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCJ,MADxC;AAETK,MAAAA,UAAU,EAAE,oCAAoCJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCJ,MAFhF;AAGTM,MAAAA,OAAO,EAAE,EAHA;AAITC,MAAAA,OAAO,EAAE,EAJA;AAKTC,MAAAA,KAAK,EAAC,EALG;AAMTC,MAAAA,MAAM,EAAC,EANE;AAOTC,MAAAA,KAAK,EAAE,EAPE;AAQTC,MAAAA,aAAa,EAAC;AARL,KAAb;AAUA,SAAKC,YAAL;AACA,SAAKC,SAAL;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDH,EAAAA,YAAY,GAAG;AACX,UAAM;AAAEZ,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACAL,IAAAA,WAAW,CAACsB,WAAZ,CAAwBhB,MAAxB,EAAgCiB,IAAhC,CAAsCC,GAAD,IAAS;AAC1C;AACA,WAAKC,QAAL,CAAc;AAAEb,QAAAA,OAAO,EAAEY,GAAG,CAACE,IAAJ,CAASd,OAApB;AAA6BC,QAAAA,OAAO,EAAEW,GAAG,CAACE,IAAJ,CAASb;AAA/C,OAAd;AACH,KAHD;AAKH;;AAIDM,EAAAA,SAAS,GAAE;AACP,UAAM;AAAEb,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACAL,IAAAA,WAAW,CAAC2B,QAAZ,CAAqBrB,MAArB,EAA6BiB,IAA7B,CAAmCC,GAAD,IAAS;AACvCI,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,GAAG,CAACE,IAA1B;AACA,WAAKD,QAAL,CAAc;AAAET,QAAAA,KAAK,EAACQ,GAAG,CAACE;AAAZ,OAAd;AAEH,KAJD;AAKH;;AAIDI,EAAAA,WAAW,GAAG;AACV,UAAM;AAAChB,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAiB,KAAKV,KAA5B;AAEA,wBAAO;AAAO,MAAA,KAAK,EAAC,aAAb;AAAA,6BACF;AAAA,kBACA,CAAC,GAAG0B,KAAK,CAACjB,KAAD,CAAL,CAAakB,IAAb,EAAJ,EAAyBC,GAAzB,CAA8BC,CAAD,iBAC7B;AAAA,oBACI,CAAC,GAAGH,KAAK,CAAChB,MAAD,CAAL,CAAciB,IAAd,EAAJ,EAA0BC,GAA1B,CAA+BE,CAAD,IAAK,KAAKC,WAAL,CAAiBF,CAAjB,EAAmBC,CAAnB,CAAnC;AADJ;AAAA;AAAA;AAAA;AAAA,gBADA;AADA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YAAP;AAUH;;AAEDC,EAAAA,WAAW,CAACF,CAAD,EAAGC,CAAH,EAAK;AACZ,UAAM;AAACnB,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAwB,KAAKZ,KAAnC;AACA,QAAIgC,MAAM,GAAG,EAAb;AACA,QAAIC,SAAS,GAAG,MAAhB;AACA,QAAIC,QAAQ,GAAG,KAAf;AACA,QAAIC,OAAO,GAAG,KAAd;;AACA,QAAGxB,KAAK,CAACA,KAAT,EAAe;AACX,UAAGA,KAAK,CAACA,KAAN,CAAYkB,CAAZ,EAAeC,CAAf,MAAoB,IAAvB,EAA4B;AACxBE,QAAAA,MAAM,GAAGrB,KAAK,CAACA,KAAN,CAAYkB,CAAZ,EAAeC,CAAf,EAAkBE,MAA3B;;AACA,YAAGrB,KAAK,CAACA,KAAN,CAAYkB,CAAZ,EAAeC,CAAf,EAAkBK,OAArB,EAA6B;AACzBA,UAAAA,OAAO,GAAGxB,KAAK,CAACA,KAAN,CAAYkB,CAAZ,EAAeC,CAAf,EAAkBK,OAA5B;AACH;AACJ;AACJ;;AACD,QAAG,CAACN,CAAC,GAACC,CAAH,IAAQ,CAAR,KAAY,CAAf,EAAiB;AACdG,MAAAA,SAAS,GAAC,OAAV;AACF;;AACD,QAAGrB,aAAa,CAACiB,CAAd,KAAkBA,CAAlB,IAAuBjB,aAAa,CAACkB,CAAd,KAAkBA,CAA5C,EAA8C;AAC1CI,MAAAA,QAAQ,GAAG,IAAX;AACH;;AAED,wBAAQ;AAAI,MAAA,KAAK,EAAED,SAAX;AAAsB,MAAA,OAAO,EAAE,MAAI,KAAKlB,WAAL,CAAiBc,CAAjB,EAAmBC,CAAnB,CAAnC;AAA0D,MAAA,WAAW,EAAE,MAAI,KAAKM,cAAL,CAAoBP,CAApB,EAAsBC,CAAtB,CAA3E;AAAA,6BAAqG,QAAC,cAAD;AAAgB,QAAA,MAAM,EAAEE,MAAxB;AAAgC,QAAA,QAAQ,EAAEE,QAA1C;AAAoD,QAAA,OAAO,EAAEC;AAA7D;AAAA;AAAA;AAAA;AAAA;AAArG;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;;AAEDpB,EAAAA,WAAW,CAACc,CAAD,EAAGC,CAAH,EAAK;AACZ,UAAM;AAACnB,MAAAA;AAAD,QAAS,KAAKX,KAApB;;AACA,QAAGW,KAAK,CAACA,KAAN,CAAYkB,CAAZ,EAAeC,CAAf,CAAH,EAAqB;AACjB,WAAKV,QAAL,CAAc;AAACR,QAAAA,aAAa,EAAC;AAACiB,UAAAA,CAAC,EAACA,CAAH;AAAKC,UAAAA,CAAC,EAACA;AAAP;AAAf,OAAd;AACA,YAAMO,aAAa,GAAE1B,KAAK,CAACA,KAAN,CAAYkB,CAAZ,EAAeC,CAAf,EAAkBO,aAAvC;AACA,UAAIC,QAAQ,GAAG3B,KAAf;;AACA,WAAI,IAAI4B,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,aAAa,CAACG,MAA5B,EAAmCD,CAAC,EAApC,EAAuC;AACnC,YAAGD,QAAQ,CAAC3B,KAAT,CAAe0B,aAAa,CAACE,CAAD,CAAb,CAAiBV,CAAhC,EAAmCQ,aAAa,CAACE,CAAD,CAAb,CAAiBT,CAApD,MAAyD,IAA5D,EAAiE;AACjEQ,UAAAA,QAAQ,CAAC3B,KAAT,CAAe0B,aAAa,CAACE,CAAD,CAAb,CAAiBV,CAAhC,EAAmCQ,aAAa,CAACE,CAAD,CAAb,CAAiBT,CAApD,EAAuDK,OAAvD,GAAiE,IAAjE;AACH,SAFG,MAEG;AACHG,UAAAA,QAAQ,CAAC3B,KAAT,CAAe0B,aAAa,CAACE,CAAD,CAAb,CAAiBV,CAAhC,EAAmCQ,aAAa,CAACE,CAAD,CAAb,CAAiBT,CAApD,IAAwD;AAACK,YAAAA,OAAO,EAAG;AAAX,WAAxD;AACH;AACA;;AACD,WAAKf,QAAL,CAAc;AAACT,QAAAA,KAAK,EAAC2B;AAAP,OAAd;AACH,KAZD,MAYO;AACH,WAAKlB,QAAL,CAAc;AAACR,QAAAA,aAAa,EAAC;AAAf,OAAd;AACH;;AACDW,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AAGH;;AAEDyB,EAAAA,cAAc,CAACP,CAAD,EAAGC,CAAH,EAAK,CACf;AACH;;AAGDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEnC,MAAAA,UAAF;AAAcC,MAAAA,OAAd;AAAuBC,MAAAA;AAAvB,QAAmC,KAAKR,KAA9C;AACA,wBACI;AAAA,iBACKM,UADL,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,iCAGgCC,OAAO,IAAIA,OAAO,CAACmC,IAHnD,OAG0DlC,OAAO,iBAAI;AAAA,gCAAYA,OAAO,CAACkC,IAApB;AAAA,sBAHrE,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAMI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE,MAAV;AAAkBC,UAAAA,cAAc,EAAE;AAAlC,SAAZ;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBACK,KAAKnB,WAAL;AADL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AA7HiC;;AAgItC,eAAe5B,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport mainService from '../services/main.service';\nimport PieceComponent from './piece.component';\n\nclass GameComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            gameId: JSON.parse(localStorage.getItem(\"auth\")).gameId,\n            inviteLink: \"http://localhost:3000/joingame/\" + JSON.parse(localStorage.getItem(\"auth\")).gameId,\n            player1: {},\n            player2: {},\n            width:16,\n            height:16,\n            board: {},\n            selectedField:{}\n        }\n        this.loadGameData();\n        this.loadBoard();\n        this.selectField = this.selectField.bind(this);\n    }\n\n    loadGameData() {\n        const { gameId } = this.state;\n        mainService.getGameData(gameId).then((res) => {\n            //console.log(res.data);\n            this.setState({ player1: res.data.player1, player2: res.data.player2 });\n        });\n    \n    }\n\n    \n\n    loadBoard(){\n        const { gameId } = this.state;\n        mainService.getBoard(gameId).then((res) => {\n            console.log(\"board:\" ,res.data);\n            this.setState({ board:res.data });\n\n        });\n    }\n\n\n\n    renderBoard() {\n        const {width,height} = this.state;\n\n        return(<table class=\"chess-board\">\n             <tbody>\n            {[...Array(width).keys()].map((x)=>\n            (<tr>\n                {[...Array(height).keys()].map((y)=>this.renderField(x,y))}</tr>))}\n            </tbody>\n            </table>);\n\n\n\n    }\n\n    renderField(x,y){\n        const {board,selectedField} = this.state;\n        let symbol = \"\";\n        let className = \"dark\";\n        let selected = false;\n        let canMove = false;\n        if(board.board){\n            if(board.board[x][y]!==null){\n                symbol = board.board[x][y].symbol;\n                if(board.board[x][y].canMove){\n                    canMove = board.board[x][y].canMove;\n                }\n            }\n        }\n        if((x+y) % 2===0){\n           className=\"white\"\n        }\n        if(selectedField.x===x && selectedField.y===y){\n            selected = true;\n        }\n\n        return (<td class={className} onClick={()=>this.selectField(x,y)} onMouseOver={()=>this.mouseOverField(x,y)}><PieceComponent symbol={symbol} selected={selected} canMove={canMove}></PieceComponent></td>);\n    }\n\n    selectField(x,y){\n        const {board} =this.state;\n        if(board.board[x][y]){\n            this.setState({selectedField:{x:x,y:y}});\n            const possibleMoves =board.board[x][y].possibleMoves; \n            let newBoard = board;\n            for(let i=0;i<possibleMoves.length;i++){\n                if(newBoard.board[possibleMoves[i].x][possibleMoves[i].y]!==null){\n                newBoard.board[possibleMoves[i].x][possibleMoves[i].y].canMove = true;\n            } else {\n                newBoard.board[possibleMoves[i].x][possibleMoves[i].y]= {canMove : true};\n            }\n            }\n            this.setState({board:newBoard});\n        } else {\n            this.setState({selectedField:{}}); \n        }\n        console.log(board);\n\n        \n    }\n\n    mouseOverField(x,y){\n        //    console.log(\"mouseOver:\",x,\",\",y);\n    }\n\n\n    render() {\n        const { inviteLink, player1, player2 } = this.state;\n        return (\n            <div>\n                {inviteLink}\n                <div></div>\n                here is the Game: Player1: {player1 && player1.name} {player2 && <>Player2: {player2.name}</>}\n                <div></div>\n\n                <div style={{display: 'flex', justifyContent: 'center'}}>\n                <div className=\"centered\">\n                    {this.renderBoard()}\n                </div>\n            </div>\n\n            </div>\n        )\n    }\n}\n\nexport default GameComponent"]},"metadata":{},"sourceType":"module"}