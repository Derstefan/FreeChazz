{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ich/Entwicklung/IOGame/repos/iogameFrontend/IOGameFrontend/src/game/map/map.component.jsx\";\nimport React, { Component } from 'react';\nimport BattleComponent from './mapobjects/battle.component';\nimport FleetComponent from './mapobjects/fleet.component';\nimport PlanetComponent from './mapobjects/planet.component';\nimport mapService from './services/map.service';\n\nclass MapComponent extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      match\n    } = this.props;\n    this.state = {\n      id: match.params.id,\n      planets: [],\n      fleets: [],\n      battles: [],\n      loadInterval: 1000\n    };\n  }\n\n  componentDidMount() {\n    const {\n      loadInterval,\n      id: gameId\n    } = this.state;\n    const loadTimer = setInterval(() => {\n      this.loadData();\n    }, loadInterval);\n    mapService.getPlanetsMap(gameId).then(res => {\n      this.setState({\n        planets: res.data\n      });\n      console.log(res.data);\n    }, error => {});\n  }\n\n  loadData() {\n    const {\n      id: gameId\n    } = this.state; //console.log(\"blabla\");\n\n    mapService.getFleetsMap(gameId).then(res => {\n      this.setState({\n        fleets: res.data\n      });\n      console.log(res.data);\n    }, error => {\n      history.push(`/`);\n    });\n    mapService.getBattlesMap(gameId).then(res => {\n      this.setState({\n        battles: res.data\n      });\n      console.log(res.data);\n    }, error => {});\n  }\n\n  renderPlanets(planets) {\n    return planets.map(planet => /*#__PURE__*/_jsxDEV(PlanetComponent, {\n      x: planet.x,\n      y: planet.y\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this));\n  }\n\n  renderBattles(battles) {\n    return battles.map(battles => /*#__PURE__*/_jsxDEV(BattleComponent, {\n      x: battles.x,\n      y: battles.y\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this));\n  }\n\n  renderFleets(fleets) {\n    return fleets.map(fleet => /*#__PURE__*/_jsxDEV(FleetComponent, {\n      x: fleet.x,\n      y: fleet.y,\n      rot: this.getAngle(fleet.vy, fleet.vx)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this));\n  }\n\n  getAngle(vx, vy) {\n    var theta = Math.atan2(vy, vx); // range (-PI, PI]\n\n    theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n    //if (theta < 0) theta = 360 + theta; // range [0, 360)\n    // console.log(\"vx \",vx,\" vy \",vy,theta);\n\n    return theta;\n  }\n\n  render() {\n    const {\n      planets,\n      fleets,\n      battles\n    } = this.state;\n    const style = {\n      width: \"800px\",\n      height: \"600px\",\n      backgroundColor: \"Khaki\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-auto\",\n      style: style,\n      children: [this.renderPlanets(planets), this.renderFleets(fleets), this.renderBattles(battles)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MapComponent;","map":{"version":3,"sources":["/home/ich/Entwicklung/IOGame/repos/iogameFrontend/IOGameFrontend/src/game/map/map.component.jsx"],"names":["React","Component","BattleComponent","FleetComponent","PlanetComponent","mapService","MapComponent","constructor","props","match","state","id","params","planets","fleets","battles","loadInterval","componentDidMount","gameId","loadTimer","setInterval","loadData","getPlanetsMap","then","res","setState","data","console","log","error","getFleetsMap","history","push","getBattlesMap","renderPlanets","map","planet","x","y","renderBattles","renderFleets","fleet","getAngle","vy","vx","theta","Math","atan2","PI","render","style","width","height","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAGjCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKD,KAArB;AAEA,SAAKE,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAEF,KAAK,CAACG,MAAN,CAAaD,EADR;AAETE,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,MAAM,EAAE,EAHC;AAITC,MAAAA,OAAO,EAAE,EAJA;AAKTC,MAAAA,YAAY,EAAE;AALL,KAAb;AAQH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAGD,MAAAA,YAAH;AAAgBL,MAAAA,EAAE,EAAEO;AAApB,QAA+B,KAAKR,KAA1C;AACA,UAAMS,SAAS,GAAGC,WAAW,CAAC,MAAM;AAChC,WAAKC,QAAL;AACH,KAF4B,EAE1BL,YAF0B,CAA7B;AAIAX,IAAAA,UAAU,CAACiB,aAAX,CAAyBJ,MAAzB,EAAiCK,IAAjC,CAAuCC,GAAD,IAAO;AACzC,WAAKC,QAAL,CAAc;AAACZ,QAAAA,OAAO,EAAEW,GAAG,CAACE;AAAd,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,IAAhB;AACH,KAHD,EAGGG,KAAD,IAAS,CAAE,CAHb;AAIH;;AAEDR,EAAAA,QAAQ,GAAG;AACP,UAAM;AAACV,MAAAA,EAAE,EAAEO;AAAL,QAAc,KAAKR,KAAzB,CADO,CAEP;;AAEAL,IAAAA,UAAU,CAACyB,YAAX,CAAwBZ,MAAxB,EAAgCK,IAAhC,CAAsCC,GAAD,IAAO;AACxC,WAAKC,QAAL,CAAc;AAACX,QAAAA,MAAM,EAAEU,GAAG,CAACE;AAAb,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,IAAhB;AACH,KAHD,EAGGG,KAAD,IAAS;AACPE,MAAAA,OAAO,CAACC,IAAR,CAAc,GAAd;AACH,KALD;AAMA3B,IAAAA,UAAU,CAAC4B,aAAX,CAAyBf,MAAzB,EAAiCK,IAAjC,CAAuCC,GAAD,IAAO;AACzC,WAAKC,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAES,GAAG,CAACE;AAAd,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,IAAhB;AACH,KAHD,EAGGG,KAAD,IAAS,CAAE,CAHb;AAIH;;AAIDK,EAAAA,aAAa,CAACrB,OAAD,EAAU;AACnB,WAAQA,OAAO,CAACsB,GAAR,CAAaC,MAAD,iBAChB,QAAC,eAAD;AAAiB,MAAA,CAAC,EAAEA,MAAM,CAACC,CAA3B;AAA8B,MAAA,CAAC,EAAED,MAAM,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA,YADI,CAAR;AAGH;;AAEDC,EAAAA,aAAa,CAACxB,OAAD,EAAU;AACnB,WAAQA,OAAO,CAACoB,GAAR,CAAapB,OAAD,iBAChB,QAAC,eAAD;AAAiB,MAAA,CAAC,EAAEA,OAAO,CAACsB,CAA5B;AAA+B,MAAA,CAAC,EAAEtB,OAAO,CAACuB;AAA1C;AAAA;AAAA;AAAA;AAAA,YADI,CAAR;AAGH;;AAEDE,EAAAA,YAAY,CAAC1B,MAAD,EAAS;AACjB,WAAQA,MAAM,CAACqB,GAAP,CAAYM,KAAD,iBACf,QAAC,cAAD;AAAgB,MAAA,CAAC,EAAEA,KAAK,CAACJ,CAAzB;AAA4B,MAAA,CAAC,EAAEI,KAAK,CAACH,CAArC;AAAwC,MAAA,GAAG,EAAE,KAAKI,QAAL,CAAcD,KAAK,CAACE,EAApB,EAAuBF,KAAK,CAACG,EAA7B;AAA7C;AAAA;AAAA;AAAA;AAAA,YADI,CAAR;AAGH;;AAEDF,EAAAA,QAAQ,CAACE,EAAD,EAAID,EAAJ,EAAO;AACX,QAAIE,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWJ,EAAX,EAAeC,EAAf,CAAZ,CADW,CACqB;;AACnCC,IAAAA,KAAK,IAAI,MAAMC,IAAI,CAACE,EAApB,CAFc,CAEU;AACzB;AACD;;AACC,WAAOH,KAAP;AACC;;AAGDI,EAAAA,MAAM,GAAG;AACL,UAAK;AAACpC,MAAAA,OAAD;AAASC,MAAAA,MAAT;AAAgBC,MAAAA;AAAhB,QAA2B,KAAKL,KAArC;AACA,UAAMwC,KAAK,GAAG;AACVC,MAAAA,KAAK,EAAE,OADG;AAEVC,MAAAA,MAAM,EAAE,OAFE;AAGVC,MAAAA,eAAe,EAAE;AAHP,KAAd;AAKA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAEH,KAAhC;AAAA,iBACK,KAAKhB,aAAL,CAAmBrB,OAAnB,CADL,EAEK,KAAK2B,YAAL,CAAkB1B,MAAlB,CAFL,EAGK,KAAKyB,aAAL,CAAmBxB,OAAnB,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAzFgC;;AA4FrC,eAAeT,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport BattleComponent from './mapobjects/battle.component';\nimport FleetComponent from './mapobjects/fleet.component';\nimport PlanetComponent from './mapobjects/planet.component';\nimport mapService from './services/map.service'\n\nclass MapComponent extends Component {\n\n\n    constructor(props) {\n        super(props)\n\n        const {match} = this.props;\n\n        this.state = {\n            id: match.params.id,\n            planets: [],\n            fleets: [],\n            battles: [],\n            loadInterval: 1000,\n        }\n\n    }\n\n    componentDidMount() {\n        const {  loadInterval,id: gameId } = this.state;\n        const loadTimer = setInterval(() => {\n            this.loadData();\n        }, loadInterval);\n\n        mapService.getPlanetsMap(gameId).then((res)=>{\n            this.setState({planets: res.data});\n            console.log(res.data);\n        },(error)=>{});\n    }\n\n    loadData() {\n        const {id: gameId}= this.state;\n        //console.log(\"blabla\");\n\n        mapService.getFleetsMap(gameId).then((res)=>{\n            this.setState({fleets: res.data});\n            console.log(res.data);\n        },(error)=>{\n            history.push(`/`);\n        });\n        mapService.getBattlesMap(gameId).then((res)=>{\n            this.setState({battles: res.data});\n            console.log(res.data);\n        },(error)=>{});\n    }\n\n\n\n    renderPlanets(planets) {\n        return (planets.map((planet) =>\n            <PlanetComponent x={planet.x} y={planet.y} />\n        ));\n    }\n\n    renderBattles(battles) {\n        return (battles.map((battles) =>\n            <BattleComponent x={battles.x} y={battles.y} />\n        ));\n    }\n\n    renderFleets(fleets) {\n        return (fleets.map((fleet) =>\n            <FleetComponent x={fleet.x} y={fleet.y} rot={this.getAngle(fleet.vy,fleet.vx)} />\n        ));\n    }\n\n    getAngle(vx,vy){\n        var theta = Math.atan2(vy, vx); // range (-PI, PI]\n     theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n    //if (theta < 0) theta = 360 + theta; // range [0, 360)\n   // console.log(\"vx \",vx,\" vy \",vy,theta);\n    return theta;\n    }\n\n\n    render() {\n        const{planets,fleets,battles} = this.state;\n        const style = {\n            width: \"800px\",\n            height: \"600px\",\n            backgroundColor: \"Khaki\"\n        }\n        return (\n            <div className=\"mx-auto\" style={style}>\n                {this.renderPlanets(planets)}\n                {this.renderFleets(fleets)}\n                {this.renderBattles(battles)}\n            </div>\n        )\n    }\n}\n\nexport default MapComponent"]},"metadata":{},"sourceType":"module"}