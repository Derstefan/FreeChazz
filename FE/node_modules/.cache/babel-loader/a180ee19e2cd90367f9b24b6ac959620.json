{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/generator/piece-generator.component.jsx\";\nimport React, { Component } from 'react';\n\nclass PieceGeneratorComponent extends Component {\n  static loadConf() {\n    //Configuration\n    return {\n      width: 460,\n      height: 660\n    };\n  }\n\n  static drawPolygon() {\n    const conf = this.loadConf();\n    const width = conf.width;\n    const height = conf.height;\n    const mirror = width / 2;\n    var pointNumber = this.randNumOfRange(3, 7);\n    var color = \"green\";\n    var pts = \"\";\n    var ptsMirror = \"\";\n\n    for (var i = 0; i < pointNumber; i++) {\n      var x = 5;\n      var y = 3;\n      pts += x + \",\" + y + \" \";\n      ptsMirror += x + mirror + \",\" + y + \" \";\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: \"20,10 25,80 16,90 \",\n        fill: \"lime\",\n        stroke: \"purple\",\n        \"stroke-width\": \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: \"200,10 25,180 116,190 \",\n        fill: \"lime\",\n        stroke: \"purple\",\n        \"stroke-width\": \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 102\n      }, this)]\n    }, void 0, true);\n  }\n\n  static randNumOfRange(a, b) {\n    return Math.round(Math.random() * (b - a) + a);\n  }\n\n  static filter() {\n    return /*#__PURE__*/_jsxDEV(\"defs\", {\n      children: /*#__PURE__*/_jsxDEV(\"filter\", {\n        id: \"f1\",\n        x: \"0\",\n        y: \"0\",\n        children: /*#__PURE__*/_jsxDEV(\"feGaussianBlur\", {\n          in: \"SourceGraphic\",\n          stdDeviation: \"15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n\n  static drawPiece() {\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      height: \"660\",\n      width: \"660\",\n      children: [this.filter(), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"300\",\n        cy: \"300\",\n        r: \"200\",\n        stroke: \"black\",\n        \"stroke-width\": \"3\",\n        fill: \"red\",\n        filter: \"url(#f1)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), this.drawPolygon()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PieceGeneratorComponent;","map":{"version":3,"sources":["/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/generator/piece-generator.component.jsx"],"names":["React","Component","PieceGeneratorComponent","loadConf","width","height","drawPolygon","conf","mirror","pointNumber","randNumOfRange","color","pts","ptsMirror","i","x","y","a","b","Math","round","random","filter","drawPiece"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,uBAAN,SAAsCD,SAAtC,CAAgD;AAG5C,SAAOE,QAAP,GAAkB;AACd;AACA,WAAO;AACHC,MAAAA,KAAK,EAAE,GADJ;AAEHC,MAAAA,MAAM,EAAE;AAFL,KAAP;AAIH;;AAMD,SAAOC,WAAP,GAAqB;AACjB,UAAMC,IAAI,GAAG,KAAKJ,QAAL,EAAb;AAEA,UAAMC,KAAK,GAAGG,IAAI,CAACH,KAAnB;AACA,UAAMC,MAAM,GAAGE,IAAI,CAACF,MAApB;AACA,UAAMG,MAAM,GAAGJ,KAAK,GAAG,CAAvB;AAGA,QAAIK,WAAW,GAAG,KAAKC,cAAL,CAAoB,CAApB,EAAuB,CAAvB,CAAlB;AACA,QAAIC,KAAK,GAAG,OAAZ;AACA,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,WAApB,EAAiCK,CAAC,EAAlC,EAAsC;AAClC,UAAIC,CAAC,GAAG,CAAR;AACA,UAAIC,CAAC,GAAG,CAAR;AACAJ,MAAAA,GAAG,IAAIG,CAAC,GAAG,GAAJ,GAAUC,CAAV,GAAc,GAArB;AACAH,MAAAA,SAAS,IAAKE,CAAC,GAAGP,MAAL,GAAe,GAAf,GAAqBQ,CAArB,GAAyB,GAAtC;AACH;;AAED,wBAAO;AAAA,8BAAE;AAAS,QAAA,MAAM,EAAC,oBAAhB;AAAqC,QAAA,IAAI,EAAC,MAA1C;AAAiD,QAAA,MAAM,EAAC,QAAxD;AAAiE,wBAAa;AAA9E;AAAA;AAAA;AAAA;AAAA,cAAF,eAAsF;AAAS,QAAA,MAAM,EAAC,wBAAhB;AAAyC,QAAA,IAAI,EAAC,MAA9C;AAAqD,QAAA,MAAM,EAAC,QAA5D;AAAqE,wBAAa;AAAlF;AAAA;AAAA;AAAA;AAAA,cAAtF;AAAA,oBAAP;AACH;;AAED,SAAON,cAAP,CAAsBO,CAAtB,EAAyBC,CAAzB,EAA4B;AACxB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,CAAC,GAAGD,CAArB,IAA0BA,CAArC,CAAP;AACH;;AAED,SAAOK,MAAP,GAAgB;AACZ,wBAAO;AAAA,6BACH;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,CAAC,EAAC,GAAlB;AAAsB,QAAA,CAAC,EAAC,GAAxB;AAAA,+BACI;AAAgB,UAAA,EAAE,EAAC,eAAnB;AAAmC,UAAA,YAAY,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAKH;;AAGD,SAAOC,SAAP,GAAmB;AACf,wBACI;AAAK,MAAA,MAAM,EAAC,KAAZ;AAAkB,MAAA,KAAK,EAAC,KAAxB;AAAA,iBACK,KAAKD,MAAL,EADL,eAEI;AAAQ,QAAA,EAAE,EAAC,KAAX;AAAiB,QAAA,EAAE,EAAC,KAApB;AAA0B,QAAA,CAAC,EAAC,KAA5B;AAAkC,QAAA,MAAM,EAAC,OAAzC;AAAiD,wBAAa,GAA9D;AAAkE,QAAA,IAAI,EAAC,KAAvE;AAA6E,QAAA,MAAM,EAAC;AAApF;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGK,KAAKhB,WAAL,EAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA1D2C;;AAgEhD,eAAeJ,uBAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass PieceGeneratorComponent extends Component {\n\n\n    static loadConf() {\n        //Configuration\n        return {\n            width: 460,\n            height: 660\n        };\n    }\n\n\n\n\n\n    static drawPolygon() {\n        const conf = this.loadConf();\n\n        const width = conf.width;\n        const height = conf.height;\n        const mirror = width / 2;\n\n\n        var pointNumber = this.randNumOfRange(3, 7);\n        var color = \"green\";\n        var pts = \"\";\n        var ptsMirror = \"\";\n        for (var i = 0; i < pointNumber; i++) {\n            var x = 5;\n            var y = 3;\n            pts += x + \",\" + y + \" \";\n            ptsMirror += (x + mirror) + \",\" + y + \" \";\n        }\n\n        return <><polygon points=\"20,10 25,80 16,90 \" fill=\"lime\" stroke=\"purple\" stroke-width=\"1\" /><polygon points=\"200,10 25,180 116,190 \" fill=\"lime\" stroke=\"purple\" stroke-width=\"1\" /></>;\n    }\n\n    static randNumOfRange(a, b) {\n        return Math.round(Math.random() * (b - a) + a);\n    }\n\n    static filter() {\n        return <defs>\n            <filter id=\"f1\" x=\"0\" y=\"0\">\n                <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"15\" />\n            </filter>\n        </defs>;\n    }\n\n\n    static drawPiece() {\n        return (\n            <svg height=\"660\" width=\"660\">\n                {this.filter()}\n                <circle cx=\"300\" cy=\"300\" r=\"200\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" filter=\"url(#f1)\" />\n                {this.drawPolygon()}\n            </svg>\n        )\n    }\n\n\n\n}\n\nexport default PieceGeneratorComponent"]},"metadata":{},"sourceType":"module"}