{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/pieces.component.jsx\";\nimport React, { Component } from 'react';\nimport Canvas from '../game/canvas.component';\nimport PieceGenerator from '../generator/piece-generator';\nimport RandomGenerator from '../generator/random-generator';\nimport UtilFunctions from '../generator/random-generator';\n\nclass PiecesComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 30,\n      height: 40,\n      number: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      piece: pg.drawPieceCanvas(\"P1\")\n    };\n  }\n\n  drawPiece() {\n    const {\n      width,\n      height\n    } = this.state;\n    const pg = new PieceGenerator(30, 40, \"\" + Math.random());\n\n    const draw = (ctx, frameCount) => {\n      ctx.canvas.width = width;\n      ctx.canvas.height = height;\n      ctx.drawImage(piece, 0, 0);\n    };\n\n    return draw;\n  }\n\n  drawPieces() {\n    const {\n      number\n    } = this.state;\n    return number.map(() => /*#__PURE__*/_jsxDEV(Canvas, {\n      draw: this.drawPiece()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }, this));\n  }\n\n  render() {\n    return this.drawPieces();\n  }\n\n}\n\nexport default PiecesComponent;","map":{"version":3,"sources":["/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/components/pieces.component.jsx"],"names":["React","Component","Canvas","PieceGenerator","RandomGenerator","UtilFunctions","PiecesComponent","constructor","props","state","width","height","number","piece","pg","drawPieceCanvas","drawPiece","Math","random","draw","ctx","frameCount","canvas","drawImage","drawPieces","map","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;AAEA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAEpCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAHC;AAITC,MAAAA,KAAK,EAAEC,EAAE,CAACC,eAAH,CAAmB,IAAnB;AAJE,KAAb;AAOH;;AAEDC,EAAAA,SAAS,GAAG;AACR,UAAM;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAoB,KAAKF,KAA/B;AACA,UAAMK,EAAE,GAAG,IAAIX,cAAJ,CAAmB,EAAnB,EAAuB,EAAvB,EAA2B,KAAKc,IAAI,CAACC,MAAL,EAAhC,CAAX;;AACA,UAAMC,IAAI,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqB;AAC9BD,MAAAA,GAAG,CAACE,MAAJ,CAAWZ,KAAX,GAAmBA,KAAnB;AACAU,MAAAA,GAAG,CAACE,MAAJ,CAAWX,MAAX,GAAoBA,MAApB;AACAS,MAAAA,GAAG,CAACG,SAAJ,CAAcV,KAAd,EAAqB,CAArB,EAAwB,CAAxB;AACH,KAJD;;AAKA,WAAOM,IAAP;AACH;;AAEDK,EAAAA,UAAU,GAAG;AACT,UAAM;AAAEZ,MAAAA;AAAF,QAAa,KAAKH,KAAxB;AACA,WAAOG,MAAM,CAACa,GAAP,CAAW,mBAAM,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKT,SAAL;AAAd;AAAA;AAAA;AAAA;AAAA,YAAjB,CAAP;AACH;;AAEDU,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKF,UAAL,EAAP;AACH;;AAhCmC;;AAmCxC,eAAelB,eAAf","sourcesContent":["import React, { Component } from 'react'\nimport Canvas from '../game/canvas.component';\nimport PieceGenerator from '../generator/piece-generator';\nimport RandomGenerator from '../generator/random-generator';\nimport UtilFunctions from '../generator/random-generator';\n\nclass PiecesComponent extends Component {\n\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            width: 30,\n            height: 40,\n            number: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            piece: pg.drawPieceCanvas(\"P1\")\n        }\n\n    }\n\n    drawPiece() {\n        const { width, height } = this.state;\n        const pg = new PieceGenerator(30, 40, \"\" + Math.random());\n        const draw = (ctx, frameCount) => {\n            ctx.canvas.width = width\n            ctx.canvas.height = height\n            ctx.drawImage(piece, 0, 0);\n        }\n        return draw;\n    }\n\n    drawPieces() {\n        const { number } = this.state;\n        return number.map(() => <Canvas draw={this.drawPiece()} />)\n    }\n\n    render() {\n        return this.drawPieces();\n    }\n}\n\nexport default PiecesComponent"]},"metadata":{},"sourceType":"module"}