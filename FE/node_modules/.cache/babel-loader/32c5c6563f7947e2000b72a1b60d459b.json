{"ast":null,"code":"import React, { Component } from 'react';\n\nclass RandomGenerator extends Component {\n  constructor(str) {\n    super();\n    this.tempSeed = this.stringToHash(str);\n    console.log(\"str=\", str, \"seed=\", this.tempSeed);\n  }\n\n  random() {\n    var x = Math.sin(this.tempSeed) * 10000;\n    this.tempSeed = Math.sin(this.tempSeed);\n    return x - Math.floor(x);\n  }\n\n  randNumOfRange(a, b) {\n    return Math.round(this.random() * (b - a) + a);\n  } // hash(str) {\n  //     var hash = 0, i, chr;\n  //     if (str.length === 0) return hash;\n  //     for (i = 0; i < str.length; i++) {\n  //         chr = str.charCodeAt(i);\n  //         hash = ((hash << 5) - hash) + chr;\n  //         hash |= 0; // Convert to 32bit integer\n  //     }\n  //     return hash;\n  // }\n\n\n  stringToHash(string) {\n    var hash = 0;\n    if (string.length == 0) return hash;\n\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      hash = (hash << 5) - hash + char;\n      hash = hash & hash;\n    }\n\n    return hash;\n  }\n\n}\n\nexport default RandomGenerator;","map":{"version":3,"sources":["/home/ich/MEGA/Entwicklung/FreeChess/repo/FreeChessRepo/FreeChess/FE/src/generator/random-generator.jsx"],"names":["React","Component","RandomGenerator","constructor","str","tempSeed","stringToHash","console","log","random","x","Math","sin","floor","randNumOfRange","a","b","round","string","hash","length","i","char","charCodeAt"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AAGpCE,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb;AACA,SAAKC,QAAL,GAAgB,KAAKC,YAAL,CAAkBF,GAAlB,CAAhB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,GAApB,EAAyB,OAAzB,EAAkC,KAAKC,QAAvC;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,QAAIC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAAS,KAAKP,QAAd,IAA0B,KAAlC;AACA,SAAKA,QAAL,GAAgBM,IAAI,CAACC,GAAL,CAAS,KAAKP,QAAd,CAAhB;AACA,WAAOK,CAAC,GAAGC,IAAI,CAACE,KAAL,CAAWH,CAAX,CAAX;AACH;;AAEDI,EAAAA,cAAc,CAACC,CAAD,EAAIC,CAAJ,EAAO;AAEjB,WAAOL,IAAI,CAACM,KAAL,CAAW,KAAKR,MAAL,MAAiBO,CAAC,GAAGD,CAArB,IAA0BA,CAArC,CAAP;AACH,GAlBmC,CAqBpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAT,EAAAA,YAAY,CAACY,MAAD,EAAS;AAEjB,QAAIC,IAAI,GAAG,CAAX;AAEA,QAAID,MAAM,CAACE,MAAP,IAAiB,CAArB,EAAwB,OAAOD,IAAP;;AAExB,SAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,MAAM,CAACE,MAAvB,EAA+BC,CAAC,EAAhC,EAAoC;AAChCC,MAAAA,IAAI,GAAGJ,MAAM,CAACK,UAAP,CAAkBF,CAAlB,CAAP;AACAF,MAAAA,IAAI,GAAI,CAACA,IAAI,IAAI,CAAT,IAAcA,IAAf,GAAuBG,IAA9B;AACAH,MAAAA,IAAI,GAAGA,IAAI,GAAGA,IAAd;AACH;;AAED,WAAOA,IAAP;AACH;;AA7CmC;;AAkDxC,eAAejB,eAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass RandomGenerator extends Component {\n\n\n    constructor(str) {\n        super();\n        this.tempSeed = this.stringToHash(str);\n        console.log(\"str=\", str, \"seed=\", this.tempSeed);\n    }\n\n    random() {\n        var x = Math.sin(this.tempSeed) * 10000;\n        this.tempSeed = Math.sin(this.tempSeed);\n        return x - Math.floor(x);\n    }\n\n    randNumOfRange(a, b) {\n\n        return Math.round(this.random() * (b - a) + a);\n    }\n\n\n    // hash(str) {\n    //     var hash = 0, i, chr;\n    //     if (str.length === 0) return hash;\n    //     for (i = 0; i < str.length; i++) {\n    //         chr = str.charCodeAt(i);\n    //         hash = ((hash << 5) - hash) + chr;\n    //         hash |= 0; // Convert to 32bit integer\n    //     }\n    //     return hash;\n    // }\n\n    stringToHash(string) {\n\n        var hash = 0;\n\n        if (string.length == 0) return hash;\n\n        for (i = 0; i < string.length; i++) {\n            char = string.charCodeAt(i);\n            hash = ((hash << 5) - hash) + char;\n            hash = hash & hash;\n        }\n\n        return hash;\n    }\n\n\n}\n\nexport default RandomGenerator"]},"metadata":{},"sourceType":"module"}